IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Target_DPD_FMP_Roundup' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Target_DPD_FMP_Roundup
GO
CREATE PROCEDURE Usp_Get_Target_DPD_FMP_Roundup
@START_DATE SMALLDATETIME,@END_DATE SMALLDATETIME
AS
SET NOCOUNT ON;
SELECT TER.TERRITORY_AREA,DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,AA.AGREEMENT_NO,AA.END_DATE,ABI.BRAND_ID,BN.BRAND_NAME,
PS_GROUP = CASE WHEN ABI.BRAND_ID = '00601' THEN 'SMALL PACK SIZE'--BIOSORB
				WHEN ABI.BRAND_ID = '0060200' THEN 'SMALL PACK SIZE'--BIOSORB
				WHEN ABI.BRAND_ID = '00604' THEN 'SMALL PACK SIZE'--BIOSORB

				WHEN ABI.BRAND_ID = '00681' THEN 'SMALL PACK SIZE'--POWER MAX
				WHEN ABI.BRAND_ID = '00684' THEN 'SMALL PACK SIZE'--POWER MAX

				WHEN ABI.BRAND_ID = '007801' THEN 'SMALL PACK SIZE'--TRANSORB
				WHEN ABI.BRAND_ID = '007804' THEN 'SMALL PACK SIZE'--TRANSORB
				WHEN ABI.BRAND_ID = '0078200' THEN 'SMALL PACK SIZE'--TRANSORB

				WHEN ABI.BRAND_ID = '006820' THEN 'BIG PACK SIZE'--POWER MAX
				WHEN ABI.BRAND_ID = '007820' THEN 'BIG PACK SIZE'--TRANSORB
				WHEN ABI.BRAND_ID = '006020' THEN 'BIG PACK SIZE'--BIOSORB
				ELSE 'UNKNOWN PACK SIZE'
		   END,
PROD_CATEGORY = CASE WHEN CHARINDEX('POWERMAX',BN.BRAND_NAME) > 0 THEN 'ROUNDUP POWERMAX'
					 WHEN CHARINDEX('TRANSORB',BN.BRAND_NAME) > 0 THEN 'ROUNDUP TRANSORB'
					 WHEN CHARINDEX('ROUNDUP',BN.BRAND_NAME) > 0 THEN 'ROUNDUP BIOSORB'
					 ELSE 'UNKNOW CATEGORY'
				END,
ISCombined = CASE 
                 WHEN ABI.COMB_AGREE_BRAND_ID IS NOT NULL THEN 'YES'
                 ELSE 'NO'
			 END,
ABI.TARGET_FMP1,ABI.TARGET_FMP2,ABI.TARGET_FMP3,(ABI.TARGET_FMP1 + ABI.TARGET_FMP2 + ABI.TARGET_FMP3) AS TARGET_YEAR_FMP,
ABI.TARGET_FMP_FM1,ABI.TARGET_FMP_FM1 * AVGP.AVGPRICE AS TARGET_FMP_FM1_VALUE,ABI.TARGET_FMP_FM2,ABI.TARGET_FMP_FM2 * AVGP.AVGPRICE AS TARGET_FMP_FM2_VALUE,
ABI.TARGET_FMP_FM3,ABI.TARGET_FMP_FM3 * AVGP.AVGPRICE AS TARGET_FMP_FM3_VALUE,
ABI.TARGET_FMP_PL1,ABI.TARGET_FMP_PL1 * AVGP.AVGPRICE_PL  AS TARGET_FMP_PL1_VALUE,ABI.TARGET_FMP_PL2,
ABI.TARGET_FMP_PL2 * AVGP.AVGPRICE_PL AS TARGET_FMP_PL2_VALUE,
ABI.TARGET_FMP_PL3,ABI.TARGET_FMP_PL3 * AVGP.AVGPRICE_PL AS TARGET_FMP_PL3_VALUE,

(ABI.TARGET_FMP_FM1 + ABI.TARGET_FMP_FM2 + ABI.TARGET_FMP_FM3)* AVGP.AVGPRICE AS TARGET_YEAR_FM_VALUE,
(ABI.TARGET_FMP_PL1 + ABI.TARGET_FMP_PL2 + ABI.TARGET_FMP_PL3)* AVGP.AVGPRICE_PL AS TARGET_YEAR_PL_VALUE,
ABI.CREATE_DATE,ABI.CREATE_BY,ABI.MODIFY_BY,ABI.MODIFY_DATE 
FROM DIST_DISTRIBUTOR DR INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DR.DISTRIBUTOR_ID = DA.DISTRIBUTOR_ID
INNER JOIN AGREE_AGREEMENT AA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO
INNER JOIN AGREE_BRAND_INCLUDE ABI ON AA.AGREEMENT_NO = ABI.AGREEMENT_NO
INNER JOIN BRND_BRAND BN ON BN.BRAND_ID = ABI.BRAND_ID
INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
LEFT OUTER JOIN(
SELECT BRAND_ID,AVGPRICE,AVGPRICE_PL, START_PERIODE FROM BRND_AVGPRICE WHERE START_PERIODE >= @START_DATE
 )AVGP
 ON AVGP.START_PERIODE = AA.START_DATE AND AVGP.BRAND_ID = ABI.BRAND_ID
 AND BN.BRAND_ID = AVGP.BRAND_ID
WHERE AA.START_DATE >= @START_DATE AND AA.END_DATE <= @END_DATE
AND AA.QS_TREATMENT_FLAG IN('Q','F')
AND BN.BRAND_NAME LIKE 'ROUNDUP%'
GO


----SELECT * FROM BRND_BRAND WHERE BRAND_NAME LIKE '%ROUNDUP%'

----SELECT CHARINDEX('LINDOMIN','ROUNDUP POWERMAX 660 SL - 01')
--IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'FK_BRND_DISC_PROG' AND [TABLE_NAME] = 'ORDR_OA_BRANDPACK_DISC')
--BEGIN
--ALTER TABLE ORDR_OA_BRANDPACK_DISC ADD FK_BRND_DISC_PROG INT NULL
--END
--GO
----ALTER TABLE ORDR_OA_BRANDPACK_DISC ADD DEFAULT 0 FOR FK_BRND_DISC_PROG;
----UPDATE ORDR_OA_BRANDPACK_DISC SET FK_BRND_DISC_PROG = NULL WHERE FK_BRND_DISC_PROG = 0;
--GO
--IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'FK_BRND_DISC_PROG' AND [TABLE_NAME] = 'ORDR_OA_REMAINDING')
--BEGIN
--ALTER TABLE ORDR_OA_REMAINDING ADD FK_BRND_DISC_PROG INT NULL
--END
--GO
----UPDATE ORDR_OA_REMAINDING SET FK_BRND_DISC_PROG = NULL WHERE FK_BRND_DISC_PROG = 0;
----GO


--IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Usp_Get_DD_DR_CBD' AND TYPE = 'P')
--DROP PROCEDURE Usp_Get_DD_DR_CBD
--GO
--CREATE PROCEDURE Usp_Get_DD_DR_CBD
--@DISTRIBUTOR_ID VARCHAR(50),
--@PO_DATE SMALLDATETIME,
--@OA_QTY DECIMAL(18,3),
--@BRANDPACK_ID VARCHAR(14),
--@TypeApp VARCHAR(10),
--@COMP_NAME NVARCHAR(100) = 'Administrator'
--AS
--SET NOCOUNT ON;

--DECLARE @QRY_MAIN NVARCHAR(MAX),@QRY_2 NVARCHAR(MAX),@V_BRAND_ID VARCHAR(7);
--IF NOT EXISTS(SELECT NAME FROM TEMPDB.SYS.OBJECTS WHERE NAME = '##T_Get_DD_DR_CBD_' + @COMP_NAME AND Type = 'U')
--	BEGIN
--		SET @V_BRAND_ID =  (SELECT BRAND_ID FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID);
--		SET @QRY_MAIN = 'SELECT PROGRAM_ID = CASE WHEN (BDH.PROGRAM_ID IS NOT NULL) THEN BDH.PROGRAM_ID
--		ELSE CONVERT(VARCHAR(100),BDH.IDApp) END,
--		BDH.PROGRAM_DESC,BDH.APPlY_DATE,BDH.END_DATE,
--		APPLY_TO = ''CERTAIN DISTRIBUTORS'',DISTRIBUTORS = DR.DISTRIBUTOR_NAME,BDLB.BRAND_ID,
--		BR.BRAND_NAME,ISNULL(LB.BRANDPACK_ID,'''') AS BRANDPACK_ID,ISNULL(LB.BRANDPACK_NAME,'''') AS BRANDPACK_NAME,
--		APPLY_TARGET_TO =  CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN ''CURRENT PACK SIZE'' 
--								WHEN (PROG2.BRAND_ID IS NOT NULL) THEN ''ALL PACK SIZE OF CURRENT BRAND''
--								ELSE ''ALL PRODUCT(S)''
--								END,
--		TARGET_PO = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.MoreThanQty 
--								WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.MoreThanQty
--								ELSE PROG.MoreThanQty 
--								END,
--		DISC = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.Disc/100 
--								WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.Disc/100
--								ELSE PROG.Disc/100 
--								END,
--		DISC_TYPE = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.TypeApp 
--								WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.TypeApp
--								ELSE PROG.TypeApp 
--								END,
--		FK_BRND_DISC_PROG = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.IDApp 
--								WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.IDApp
--								ELSE PROG.IDApp 
--								END
--		INTO TEMPDB..##T_Get_DD_DR_CBD_';
--		SET @QRY_MAIN = @QRY_MAIN + @COMP_NAME ;
--		SET @QRY_2 = ' FROM DIST_DISTRIBUTOR DR 
--		INNER JOIN DIST_DISC_BRAND_LIST DDBL ON DR.DISTRIBUTOR_ID = DDBL.DISTRIBUTOR_ID 
--		INNER JOIN BRND_DISC_HEADER BDH ON BDH.IDApp = DDBL.FKApp
--		INNER JOIN BRND_DISC_LIST_BRAND BDLB ON BDLB.FKApp = BDH.IDApp
--		INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BDLB.BRAND_ID
--		LEFT OUTER JOIN(SELECT BR1.BRAND_ID, BDLP.BRANDPACK_ID,BP.BRANDPACK_NAME,BDLP.FKApp FROM BRND_BRANDPACK BP INNER JOIN BRND_DISC_LIST_BRANDPACK BDLP ON BDLP.BRANDPACK_ID = BP.BRANDPACK_ID
--		 INNER JOIN BRND_BRAND BR1 ON BR1.BRAND_ID = BP.BRAND_ID)LB
--		ON LB.FKApp = BDH.IDApp AND LB.BRAND_ID = BDLB.BRAND_ID
--		LEFT OUTER JOIN(SELECT IDApp,FKApp,MoreThanQty,Disc,TypeApp,BRANDPACK_ID FROM BRND_DISC_PROG WHERE BRANDPACK_ID IS NOT NULL)PROG1
--		ON PROG1.BRANDPACK_ID = LB.BRANDPACK_ID AND PROG1.FKApp = BDH.IDApp
--		LEFT OUTER JOIN (SELECT IDApp,FkApp,MoreThanQty,Disc,TypeApp,BRAND_ID FROM BRND_DISC_PROG WHERE BRAND_ID IS NOT NULL)PROG2
--		 ON PROG2.FKApp=BDH.IDApp AND PROG2.BRAND_ID = BDLB.BRAND_ID
--		LEFT OUTER JOIN (SELECT IDApp,FkApp,MoreThanQty,Disc,TypeApp FROM BRND_DISC_PROG WHERE (BRAND_ID IS NULL AND BRANDPACK_ID IS NULL))PROG
--		 ON PROG.FKApp = BDH.IDApp 
--		 WHERE DDBL.DISTRIBUTOR_ID = @I_DISTRIBUTOR_ID AND BDH.APPLY_TO = ''CD''
--		 AND BDH.APPLY_DATE <= @I_PO_DATE AND BDH.END_DATE >= @I_PO_DATE
--		 UNION
--		SELECT PROGRAM_ID = CASE WHEN (BDH.PROGRAM_ID IS NOT NULL) THEN BDH.PROGRAM_ID
--		ELSE CONVERT(VARCHAR(100),BDH.IDApp) END,
--		BDH.PROGRAM_DESC,BDH.APPlY_DATE,BDH.END_DATE,
--		APPLY_TO = ''ALL_DISTRIBUTORS'',DISTRIBUTORS = '''',BDLB.BRAND_ID,
--		BR.BRAND_NAME,ISNULL(LB.BRANDPACK_ID,'''') AS BRANDPACK_ID,ISNULL(LB.BRANDPACK_NAME,'''') AS BRANDPACK_NAME,
--		APPLY_TARGET_TO =  CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN ''CURRENT PACK SIZE'' 
--								WHEN (PROG2.BRAND_ID IS NOT NULL) THEN ''ALL PACK SIZE OF CURRENT BRAND''
--								ELSE ''ALL PRODUCT(S)'' 
--								END,
--		TARGET_PO = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.MoreThanQty 
--								WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.MoreThanQty
--								ELSE PROG.MoreThanQty 
--								END,
--		DISC = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.Disc/100 
--								WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.Disc/100
--								ELSE PROG.Disc/100 
--								END,
--		DISC_TYPE = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.TypeApp 
--								WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.TypeApp
--								ELSE PROG.TypeApp 
--								END,
--		FK_BRND_DISC_PROG = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.IDApp 
--								WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.IDApp
--								ELSE PROG.IDApp 
--								END
--		FROM BRND_DISC_HEADER BDH INNER JOIN BRND_DISC_LIST_BRAND BDLB ON BDLB.FKApp = BDH.IDApp
--		INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BDLB.BRAND_ID
--		LEFT OUTER JOIN(SELECT BR1.BRAND_ID, BDLP.BRANDPACK_ID,BP.BRANDPACK_NAME,BDLP.FKApp FROM BRND_BRANDPACK BP INNER JOIN BRND_DISC_LIST_BRANDPACK BDLP ON BDLP.BRANDPACK_ID = BP.BRANDPACK_ID
--		INNER JOIN BRND_BRAND BR1 ON BR1.BRAND_ID = BP.BRAND_ID)LB
--		ON LB.FKApp = BDH.IDApp AND LB.BRAND_ID = BDLB.BRAND_ID
--		LEFT OUTER JOIN(SELECT IDApp,FKApp,MoreThanQty,Disc,TypeApp,BRANDPACK_ID FROM BRND_DISC_PROG WHERE BRANDPACK_ID IS NOT NULL)PROG1
--		ON PROG1.BRANDPACK_ID = LB.BRANDPACK_ID AND PROG1.FKApp = BDH.IDApp
--		LEFT OUTER JOIN (SELECT IDApp, FkApp,MoreThanQty,Disc,TypeApp,BRAND_ID FROM BRND_DISC_PROG WHERE BRAND_ID IS NOT NULL)PROG2
--		ON PROG2.FKApp=BDH.IDApp AND PROG2.BRAND_ID = BDLB.BRAND_ID
--		LEFT OUTER JOIN (SELECT IDApp,FkApp,MoreThanQty,Disc,TypeApp FROM BRND_DISC_PROG WHERE (BRAND_ID IS NULL AND BRANDPACK_ID IS NULL))PROG
--		ON PROG.FKApp = BDH.IDApp
--		WHERE BDH.APPLY_DATE <= @I_PO_DATE AND BDH.END_DATE >= @I_PO_DATE AND BDH.APPLY_TO = ''AL''';
--		SET @QRY_MAIN = @QRY_MAIN + @QRY_2;		
--		EXECUTE sp_executesql @QRY_MAIN,N'@I_PO_DATE SMALLDATETIME,@I_DISTRIBUTOR_ID VARCHAR(50)',
--		@I_PO_DATE = @PO_DATE,@I_DISTRIBUTOR_ID = @DISTRIBUTOR_ID;	
--	END
--SET @QRY_MAIN = 'SELECT T.FK_BRND_DISC_PROG,T.PROGRAM_ID,T.PROGRAM_DESC,T.APPLY_DATE,T.END_DATE,T.BRAND_ID,T.BRAND_NAME,T.BRANDPACK_ID,T.BRANDPACK_NAME,
--				T.APPLY_TO,T.APPLY_TARGET_TO,T.TARGET_PO,T.DISC AS PERC_DISC,
--				CASE WHEN @I_QTY > T.TARGET_PO THEN T.DISC * @I_QTY ELSE 0 END AS INC_DISC,T.DISC_TYPE
--				FROM tempdb..##T_Get_DD_DR_CBD_' + @COMP_NAME + ' T		
--		        WHERE T.BRAND_ID = @I_BRAND_ID AND T.DISC_TYPE = @I_TypeApp' ;
--EXECUTE sp_executesql @QRY_MAIN,N'@I_QTY DECIMAL(18,3),
--		@I_BRAND_ID VARCHAR(7),@I_TypeApp VARCHAR(10)',
--		@I_QTY = @OA_QTY,@I_BRAND_ID = @V_BRAND_ID,
--		@I_TypeApp = @TypeApp;
--GO
	
----EXEC Usp_Get_DD_DR_CBD @DISTRIBUTOR_ID = 'SIS001IDR',@OA_QTY = 550, @PO_DATE ='02/15/2020',@TypeApp ='DD',@BRANDPACK_ID = '00010200MD'

----SELECT * FROM TEMPDB..##T_Get_DD_DR_CBD_Administrator;
----DROP TABLE TEMPDB..##T_Get_DD_DR_CBD_Administrator

--IF EXISTS(SELECT NAME FROM SYS.SYSOBJECTS WHERE NAME = 'Usp_Select_OA_Remainding_Detail' AND TYPE = 'P')
--DROP PROCEDURE Usp_Select_OA_Remainding_Detail
--GO
--CREATE PROCEDURE Usp_Select_OA_Remainding_Detail
--@DISTRIBUTOR_ID VARCHAR(10),
--@BRANDPACK_ID VARCHAR(14),
--@OA_ID VARCHAR(32)
--AS-----------------------------------------------------------------------------------------------
--execute sp_executesql
--N'SET NOCOUNT ON;SET IMPLICIT_TRANSACTIONS OFF
--DECLARE @V_BRANDPACK_NAME VARCHAR(14),@V_OA_DATE DATETIME;
--SET @V_BRANDPACK_NAME = (SELECT BRANDPACK_NAME FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @V_BRANDPACK_ID); 
--SET @V_OA_DATE = (SELECT OA_DATE FROM ORDR_ORDER_ACCEPTANCE WHERE OA_ID = @V_OA_ID);
--BEGIN
--	SELECT OORM.OA_RM_ID,OOB.OA_ID AS OA_REF_NO,BRANDPACK_NAME = @V_BRANDPACK_NAME,
--        OOB.OA_BRANDPACK_ID,OORM.QTY,OORM.LEFT_QTY,OORM.RELEASE_QTY,OORM.AGREE_DISC_HIST_ID,
--	OORM.BRND_B_S_ID,OORM.ACHIEVEMENT_BRANDPACK_ID,OORM.MRKT_DISC_HIST_ID,OORM.MRKT_M_S_ID,OORM.PROJ_DISC_HIST_ID,
--        OORM.FLAG,CONVERT(BIT,(CASE WHEN (OORM.FKCodeAdjust IS NOT NULL) THEN 1 ELSE 0 END))AS IsAdjustment,OORM.FK_BRND_DISC_PROG,
--		OORM.CREATE_DATE
--	FROM ORDR_OA_REMAINDING OORM  INNER JOIN ORDR_OA_BRANDPACK OOB ON OORM.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
--        WHERE OOB.OA_BRANDPACK_ID = ANY(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK WHERE PO_BRANDPACK_ID 
--	= ANY(SELECT PO_BRANDPACK_ID FROM ORDR_PO_BRANDPACK WHERE BRANDPACK_ID = @V_BRANDPACK_ID AND PO_REF_NO = ANY(SELECT
--	PO_REF_NO FROM ORDR_PURCHASE_ORDER WHERE DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID)))
--	AND OOB.OA_ID = ANY(SELECT OA_ID FROM ORDR_ORDER_ACCEPTANCE WHERE OA_DATE <= @V_OA_DATE
--        AND YEAR(OA_DATE) >= YEAR(GETDATE()) -1) AND OORM.LEFT_QTY > 0 
		
--END',N'@V_DISTRIBUTOR_ID VARCHAR(10),@V_BRANDPACK_ID VARCHAR(14),@V_OA_ID VARCHAR(32)',
--@V_DISTRIBUTOR_ID = @DISTRIBUTOR_ID,@V_BRANDPACK_ID = @BRANDPACK_ID,@V_OA_ID = @OA_ID;
--GO
----koneksi yang terhubung ke AccppacK NI109
----Usp_Create_Temp_Invoice_Table jadi Usp_Create_Temp_Invoice_Table_NI109
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Create_Temp_Invoice_Table_NI109' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_Temp_Invoice_Table_NI109
GO
CREATE PROCEDURE Usp_Create_Temp_Invoice_Table_NI109
@DEC_START_DATE NUMERIC(9,0),@DEC_END_DATE NUMERIC(9,0),
@COMPUTERNAME VARCHAR(100)
AS
SET NOCOUNT ON;
DECLARE @Statement NVARCHAR(4000);

SET @Statement = 'SELECT SUBSTRING(REPLACE(RIGHT(RTRIM(INV.ITEM),14),''-'',''''),2,9)AS BRANDPACK_ID,INV.BRANDPACK_NAME,
      INV.QTYSHIPPED - INV.QTYRETURN AS QTY,RTRIM(INV.INVNUMBER)AS INVNUMBER, RTRIM(INV.PONUMBER) AS PONUMBER,RTRIM(INV.REFERENCE)AS REFERENCE,INV.INVDATE,INV.UNITPRICE, 
	 (INV.QTYSHIPPED - INV.QTYRETURN)* INV.UNITPRICE AS INV_AMOUNT,INV.AUDTUSER
      INTO tempdb..##T_SELECT_INVOICE_' + @COMPUTERNAME + ' FROM
      (
       SELECT INVH.INVDATE,INVH.INVNUMBER,INVH.PONUMBER,RTRIM(ORD1.VALUE)AS REFERENCE,INVD.ITEM,INVD.[DESC] AS BRANDPACK_NAME,INVD.QTYSHIPPED,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN,INVD.UNITPRICE,INVD.AUDTUSER
       FROM NI109.dbo.OEINVH INVH INNER JOIN NI109.dbo.OEINVD INVD ON INVH.INVUNIQ = INVD.INVUNIQ
       INNER JOIN NI109.DBO.OEORDH ORD ON ORD.ORDNUMBER = INVH.ORDNUMBER
       INNER JOIN NI109.DBO.OEORDHO ORD1 ON ORD.ORDUNIQ = ORD1.ORDUNIQ
       LEFT OUTER JOIN
                  (
		   SELECT CRDH1.INVNUMBER,CRDH1.ITEM,ISNULL(SUM(CRDH1.QTYRETURN),0)AS QTYRETURN
		   FROM 
			(								
                   	  SELECT CRDH.CRDUNIQ,CRDH.INVNUMBER,CRDH.CRDDATE,CRD.ITEM,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN
                          FROM NI109.DBO.OECRDH CRDH INNER JOIN 
                          (
                            SELECT CRDUNIQ,ITEM,ISNULL(SUM(QTYRETURN),0)AS QTYRETURN
                            FROM NI109.DBO.OECRDD WHERE LINETYPE = 1 AND (RTRIM(ACCTSET) = ''FG'' OR RTRIM(ACCTSET) = ''FGST'' OR RTRIM(ACCTSET) = ''FGTOLL'')
						    GROUP BY CRDUNIQ,ITEM
                           )CRD ON CRDH.CRDUNIQ = CRD.CRDUNIQ      
                         )CRDH1
                   WHERE CRDH1.CRDDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
                   ' GROUP BY CRDH1.INVNUMBER,CRDH1.ITEM    
                  )CRD
        ON CRD.INVNUMBER = INVH.INVNUMBER 
        AND CRD.ITEM = INVD.ITEM
        WHERE RTRIM(ORD1.OPTFIELD) = ''DTSREF''
        AND LEN(RTRIM(ORD1.VALUE)) >= 4
        AND INVH.INVDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
        ' AND INVH.INVDATE <= ' + CAST(@DEC_END_DATE AS VARCHAR(20)) + '' +
	'	AND (RTRIM(INVD.ACCTSET) = ''FG'' OR RTRIM(INVD.ACCTSET) = ''FGST'' OR RTRIM(INVD.ACCTSET) = ''FGTOLL'') AND INVD.LINETYPE = 1
        AND LEN(RIGHT(RTRIM(INVD.ITEM),11)) >= 11
       )INV;
   CREATE CLUSTERED INDEX IDX_T_S_I ON ##T_SELECT_INVOICE_' + @COMPUTERNAME + '(INVDATE,QTY,BRANDPACK_ID,REFERENCE);'
execute sp_executesql @stmt = @statement;
GO
--EXEC Usp_Create_Temp_Invoice_Table_NI109 @DEC_START_DATE = '20200701',@DEC_END_DATE = '20201027',@COMPUTERNAME = 'IDNJWLF662'
--DROP TABLE ##T_SELECT_INVOICE_IDNJWLF662
--SELECT * FROM tempdb..##T_SELECT_INVOICE_IDNJWLF662
----Usp_Create_Temp_Table_BrandPack jadi Usp_Create_Temp_Table_BrandPack_NI109
--IF EXISTS(SELECT NAME FROM Nufarm.[sys].[objects] WHERE NAME = 'Usp_Create_Temp_Table_BrandPack_NI109' AND TYPE = 'P')
--DROP PROCEDURE Usp_Create_Temp_Table_BrandPack_NI109
--GO
--CREATE PROCEDURE Usp_Create_Temp_Table_BrandPack_NI109
--AS 
--SET NOCOUNT ON;
--SELECT BP.BRANDPACK_NAME,BR.BRAND_NAME AS BRAND_ACCPAC,BB1.BRAND_ID AS BRAND_ID_DTS,
--BP.BRANDPACK_ID AS BRANDPACK_ID_DTS,BR.BRAND_ID AS BRAND_ID_ACCPAC
--,(BR.BRAND_ID + '' + CASE RTRIM(BP.UNIT)
--WHEN ('LITRE')THEN
--        (SELECT 'DevidedQty' = CASE 
--          WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
--             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L') 
--          WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
--             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L')
--          WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
--             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L')
--            END
--         )  
--WHEN ('MILILITRE') THEN
--      (SELECT 'DevidedQty' = CASE 
--       WHEN (P.QUANTITY >= 1 AND P.QUANTITY <= 9) 
--             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M') 
--       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
--             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M')
--       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999 )
--             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M')
--	END
--         )  	      
--WHEN ('KILOGRAM') THEN
--      (SELECT 'DevidedQty' = CASE 
--       WHEN (BP.DEVIDED_QUANTITY >= 0.001 AND BP.DEVIDED_QUANTITY <= 0.009)
--             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
--       WHEN (BP.DEVIDED_QUANTITY >= 0.10 AND BP.DEVIDED_QUANTITY <= 0.09)
--	     THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
--       WHEN (BP.DEVIDED_QUANTITY >= 0.1 AND BP.DEVIDED_QUANTITY <= 0.9)
--	     THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
--       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
--             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K') 
--       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
--             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
--       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
--             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
--	END
--         )  	
--WHEN ('GRAM') THEN
--      (SELECT 'DevidedQty' = CASE 
--       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
--             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
--       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
--             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
--       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
--             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
--       END 
--      )
--WHEN('SACHET') THEN
--       (SELECT 'DevidedQty' = CASE 
--       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
--             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S') 
--       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
--             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S')
--       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
--             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S')
--       END 
--      )   	
--WHEN ('BAGS') THEN
--      (SELECT 'DevidedQty' = CASE 
--       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
--             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K') 
--       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
--             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
--       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
--             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
--	END
--       )  
--END	
--)AS BRANDPACK_ID_ACCPAC
--INTO ##T_BRANDPACK
--FROM(SELECT DISTINCT RIGHT(RTRIM(SEG.SEGMENT1),1) + '' + RTRIM(SEG.SEGMENT2)AS BRAND_ID,
--       UPPER(RTRIM(IC1.[DESC])) AS BRAND_NAME
--       FROM NI109.dbo.ICITEM SEG INNER JOIN NI109.dbo.ICCATG  IC1 ON IC1.CATEGORY = SEG.CATEGORY
--       WHERE (RTRIM(SEG.ITEMBRKID) = 'FG' OR  RTRIM(SEG.ITEMBRKID) = 'FGST') AND UPPER(IC1.[DESC]) NOT LIKE '%BULK%'
--       AND UPPER(IC1.[DESC]) NOT LIKE '%OTHERS%' AND UPPER(IC1.[DESC]) NOT LIKE '%GARBAGES%' AND UPPER(IC1.[DESC]) NOT LIKE '%-E' 
--       AND UPPER(IC1.[DESC]) NOT LIKE '%EXPORT%' AND UPPER(IC1.[DESC]) NOT LIKE '%EXP%'
--      )BR
--INNER JOIN(SELECT BRAND_ID,BRAND_NAME,'BRAND_ID_ACCPAC' = CASE REPLACE(BRAND_ID,'-','')
--	--ROUNDUP
--		WHEN '006020' THEN '00060' WHEN '0060200' THEN '00060'
--		WHEN '00604' THEN '00060' WHEN '00601' THEN '00060'
--		-----CHIX--
--		WHEN '01006' THEN '11006' 
--                -------LUGEN---------------------------------------------
--		WHEN '01001' THEN '11001'-----------------------------------------
--		---GIBGRO
--		WHEN '00896' THEN '30896' WHEN '00897' THEN '30897' WHEN '00898' THEN '30898'                
--		--MICROTHIOL---
--		WHEN '07017' THEN '77017' WHEN '07009' THEN '77009' WHEN '07008' THEN '77008' 
--		--KUPROXAT
--		WHEN '077001' THEN '77001'
--		---BIMARON--
--		WHEN '00325' THEN '00310'
--                --PRODUCT EXPORT 02-2014
--		WHEN '022010' THEN '22010' WHEN '022003' THEN '22003' WHEN '022034' THEN '22034'
--		WHEN '022006' THEN '22006' WHEN '022012' THEN '22012' WHEN '022011' THEN '22011'
--		ELSE BRAND_ID END
--            FROM Nufarm.dbo.BRND_BRAND WHERE BRAND_NAME NOT LIKE 'OTHERS'
--           )BB1    
--ON BB1.BRAND_ID_ACCPAC = BR.BRAND_ID 
-- OR SUBSTRING(BB1.BRAND_ID_ACCPAC,2,5) = BR.BRAND_ID OR RTRIM(BB1.BRAND_NAME) LIKE RTRIM(BR.BRAND_NAME) + '%'
--INNER JOIN Nufarm.dbo.BRND_BRANDPACK BP ON BP.BRAND_ID = BB1.BRAND_ID
--INNER JOIN Nufarm.dbo.BRND_PACK P ON BP.PACK_ID = P.PACK_ID
--WHERE (BP.UNIT <> '' AND BP.UNIT IS NOT NULL)
--AND (BP.IsActive = 1 AND BP.IsObsolete = 0)
--AND EXISTS(SELECT BRAND_ID FROM Nufarm.dbo.AGREE_BRAND_INCLUDE WHERE BRAND_ID = BB1.BRAND_ID); 

--CREATE CLUSTERED INDEX IX_T_BRANDPACK ON ##T_BRANDPACK(BRANDPACK_ID_DTS,BRANDPACK_ID_ACCPAC);
--GO
--DROP PROCEDURE INI,karena terlalu simple
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_SelectQQTY_FROM_ABI' AND TYPE = 'P')
DROP PROCEDURE Sp_SelectQQTY_FROM_ABI
GO

--DROP PROCEDURE INI,karena terlalu simple
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_SelectSQTY_FROM_ABI' AND TYPE = 'P')
-- PROCEDURE UNTUK MENYELEKSI VIEW TARGET_QUANTITY S1 S2,BERDASARKAN PARAMETER AGREEMENT_NO DAN AGREE_BRAND_ID
DROP PROCEDURE Sp_SelectSQTY_FROM_ABI
GO

--INSERT SETTING USER Akses DTS Invoice untuk perubahan database apakah ke NI87/NI109
--Setiap user DTS di setting ke database mana bila akses data yang berhubungan dengan accpac
--default akses database accpac sekarang NI87 tapi nanti defaultnya ke NI109

IF NOT EXISTS(SELECT CodeApp FROM RefBussinesRules WHERE CodeApp = 'MSC0010' AND TypeApp = 'DDC')
	INSERT INTO [dbo].[RefBussinesRules]
           ([CodeApp]
           ,[NameApp]
           ,[TypeApp]
           ,[DescriptionApp]
           ,[ParamValue]
           ,[AllowRules]
           ,[CreatedDate]
           ,[CreatedBy]
           ,[START_DATE]
           ,[END_DATE])
     VALUES ('MSC0010','Default Access DB Accpac','DDC','Default Access Database apakah ke NI87 atau ke NI109',
            'NI87',1,GETDATE(),'System Administrator','10/01/2020','09/30/2021');

GO
--
--
--
--
--
--
--
--
--
--
--
--IF NOT EXISTS(SELECT CodeApp FROM RefBussinesRules WHERE CodeApp = 'MSC0011' AND TypeApp = 'ADBA')
--	INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--     VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'ITSupport','10/01/2020','09/30/2021');
--		INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--     VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'asusetyo','10/01/2020','09/30/2021');
--	INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--     VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'Evita_Nurul','10/01/2020','09/30/2021');
--	INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--     VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'Handrian','10/01/2020','09/30/2021');
--	INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--     VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'PDian','10/01/2020','09/30/2021');
--	INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--    VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'Riana','10/01/2020','09/30/2021');
--	INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--     VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'Romdhani','10/01/2020','09/30/2021');

			
--	INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--     VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'Rsetiorini','10/01/2020','09/30/2021');
				
--	INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--     VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'RusydaRahmawati','10/01/2020','09/30/2021');

--		INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--     VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'SMufidah','10/01/2020','09/30/2021');
	
--		INSERT INTO [dbo].[RefBussinesRules]
--           ([CodeApp]
--           ,[NameApp]
--           ,[TypeApp]
--           ,[DescriptionApp]
--           ,[ParamValue]
--           ,[AllowRules]
--           ,[CreatedDate]
--           ,[CreatedBy]
--           ,[START_DATE]
--           ,[END_DATE])
--     VALUES ('MSC0011','Access DB Accpac','AADB','Access Accpac Database apakah ke NI87 atau ke NI109 berdasarkan current user',
--            'NI87',1,GETDATE(),'SWuryanti','10/01/2020','09/30/2021');
--GO
                                --'Public PBF2
                                --'Public PBF3
                                --'Public CPF1
                                --'Public CPF2
--IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'PBF2' AND [TABLE_NAME] = 'GIVEN_PROGRESSIVE')
--BEGIN
--ALTER TABLE GIVEN_PROGRESSIVE ADD PBF2 DECIMAL(18,3) NULL;
--END
--GO
--UPDATE GIVEN_PROGRESSIVE SET PBF2 = 0 WHERE PBF2 IS NULL;
--ALTER TABLE GIVEN_PROGRESSIVE ADD DEFAULT 0 FOR PBF2;
--GO

--IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'PBF3' AND [TABLE_NAME] = 'GIVEN_PROGRESSIVE')
--BEGIN
--ALTER TABLE GIVEN_PROGRESSIVE ADD PBF3 DECIMAl(18,3) NULL
--END
--GO
--UPDATE GIVEN_PROGRESSIVE SET PBF3 = 0 WHERE PBF3 IS NULL;
--ALTER TABLE GIVEN_PROGRESSIVE ADD DEFAULT 0 FOR PBF3;
--GO

--IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'CPF1' AND [TABLE_NAME] = 'GIVEN_PROGRESSIVE')
--BEGIN
--ALTER TABLE GIVEN_PROGRESSIVE ADD CPF1 DECIMAl(18,3) NULL
--END
--GO
--UPDATE GIVEN_PROGRESSIVE SET CPF1 = 0 WHERE CPF1 IS NULL;
--ALTER TABLE GIVEN_PROGRESSIVE ADD DEFAULT 0 FOR CPF1;
--GO

--IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'CPF2' AND [TABLE_NAME] = 'GIVEN_PROGRESSIVE')
--BEGIN
--ALTER TABLE GIVEN_PROGRESSIVE ADD CPF2 DECIMAl(18,3) NULL
--END
--GO
--UPDATE GIVEN_PROGRESSIVE SET CPF2 = 0 WHERE CPF2 IS NULL;
--ALTER TABLE GIVEN_PROGRESSIVE ADD DEFAULT 0 FOR CPF2;
--GO

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'GP_ID' AND [TABLE_NAME] = 'ACHIEVEMENT_HEADER')
BEGIN
ALTER TABLE ACHIEVEMENT_HEADER ADD GP_ID INT NULL
END
GO

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Target_DPD_FMP_Nufarm' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Target_DPD_FMP_Nufarm
GO
CREATE PROCEDURE Usp_Get_Target_DPD_FMP_Nufarm
@START_DATE SMALLDATETIME,@END_DATE SMALLDATETIME
AS
SET NOCOUNT ON;
SELECT TER.TERRITORY_AREA,DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,AA.AGREEMENT_NO,AA.END_DATE,ABI.BRAND_ID,BN.BRAND_NAME,
ISCombined = CASE 
                 WHEN ABI.COMB_AGREE_BRAND_ID IS NOT NULL THEN 'YES'
                 ELSE 'NO'
			 END,
ABI.TARGET_FMP1,ABI.TARGET_FMP2,ABI.TARGET_FMP3,(ABI.TARGET_FMP1 + ABI.TARGET_FMP2 + ABI.TARGET_FMP3) AS TARGET_YEAR_FMP,
ABI.TARGET_FMP_FM1,ABI.TARGET_FMP_FM1 * AVGP.AVGPRICE AS TARGET_FMP_FM1_VALUE,ABI.TARGET_FMP_FM2,ABI.TARGET_FMP_FM2 * AVGP.AVGPRICE AS TARGET_FMP_FM2_VALUE,
ABI.TARGET_FMP_FM3,ABI.TARGET_FMP_FM3 * AVGP.AVGPRICE AS TARGET_FMP_FM3_VALUE,
ABI.TARGET_FMP_PL1,ABI.TARGET_FMP_PL1 * AVGP.AVGPRICE_PL AS TARGET_FMP_PL1_VALUE,ABI.TARGET_FMP_PL2,
ABI.TARGET_FMP_PL2 * AVGP.AVGPRICE_PL AS TARGET_FMP_PL2_VALUE,
ABI.TARGET_FMP_PL3,ABI.TARGET_FMP_PL3 * AVGP.AVGPRICE_PL AS TARGET_FMP_PL3_VALUE,

(ABI.TARGET_FMP_FM1 + ABI.TARGET_FMP_FM2 + ABI.TARGET_FMP_FM3)* AVGP.AVGPRICE AS TARGET_YEAR_FM_VALUE,
(ABI.TARGET_FMP_PL1 + ABI.TARGET_FMP_PL2 + ABI.TARGET_FMP_PL3)* AVGP.AVGPRICE_PL AS TARGET_YEAR_PL_VALUE,
ABI.CREATE_DATE,ABI.CREATE_BY,ABI.MODIFY_BY,ABI.MODIFY_DATE 
FROM DIST_DISTRIBUTOR DR INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DR.DISTRIBUTOR_ID = DA.DISTRIBUTOR_ID
INNER JOIN AGREE_AGREEMENT AA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO
INNER JOIN AGREE_BRAND_INCLUDE ABI ON AA.AGREEMENT_NO = ABI.AGREEMENT_NO
INNER JOIN BRND_BRAND BN ON BN.BRAND_ID = ABI.BRAND_ID
INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
LEFT OUTER JOIN(
SELECT BRAND_ID,AVGPRICE,AVGPRICE_PL, START_PERIODE FROM BRND_AVGPRICE WHERE START_PERIODE >= @START_DATE
 )AVGP
 ON AVGP.START_PERIODE = AA.START_DATE AND AVGP.BRAND_ID = ABI.BRAND_ID
 AND BN.BRAND_ID = AVGP.BRAND_ID
WHERE AA.START_DATE >= @START_DATE AND AA.END_DATE <= @END_DATE 
AND AA.QS_TREATMENT_FLAG = 'F'
AND BN.BRAND_NAME NOT LIKE 'ROUNDUP%'
GO
