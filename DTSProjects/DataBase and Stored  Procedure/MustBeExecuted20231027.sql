Use Nufarm;
GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'BRND_PROD_CONV')C WHERE ColumnName = 'IDAppOther')
--   ALTER TABLE BRND_PROD_CONV ADD IDAppOther Int NULL;
--GO
--=====================================sudah============================
--ALTER TABLE BRND_PROD_CONV ALTER COLUMN BRANDPACK_ID VARCHAR(14) NULL;

--IF NOT EXISTS(SELECT * FROM SYST_MENU WHERE FORM_ID = 'BRND8' AND FORM_NAME = 'OtherProduct')
--BEGIN
--INSERT INTO SYST_MENU(FORM_ID,FORM_NAME,MENU_NAME,DESCRIPTIONS)
--VALUES('BRND8','OtherProduct','Other Product','Master Data bila di accpack belum ada');
--END
--GO
----INSERT USERNYA
--IF NOT EXISTS(SELECT [USER_ID] FROM SYST_PRIVILEGE WHERE [USER_ID] = 'asusetyo' AND FORM_ID = 'BRND8')
--BEGIN
--INSERT INTO SYST_PRIVILEGE(SYST_ID,[USER_ID],FORM_ID,ALLOW_VIEW,ALLOW_INSERT,ALLOW_DELETE,ALLOW_UPDATE)
--VALUES ('asusetyoBRND8','asusetyo','BRND8',1,1,1,1)
--END
--GO

--IF NOT EXISTS(SELECT [USER_ID] FROM SYST_PRIVILEGE WHERE [USER_ID] = 'Romdhani' AND FORM_ID = 'BRND8')
--BEGIN
--INSERT INTO SYST_PRIVILEGE(SYST_ID,[USER_ID],FORM_ID,ALLOW_VIEW,ALLOW_INSERT,ALLOW_DELETE,ALLOW_UPDATE)
--VALUES ('RomdhaniBRND8','Romdhani','BRND8',1,1,1,1)
--END
--GO

--IF NOT EXISTS(SELECT [USER_ID] FROM SYST_PRIVILEGE WHERE [USER_ID] = 'Handrian' AND FORM_ID = 'BRND8')
--BEGIN
--INSERT INTO SYST_PRIVILEGE(SYST_ID,[USER_ID],FORM_ID,ALLOW_VIEW,ALLOW_INSERT,ALLOW_DELETE,ALLOW_UPDATE)
--VALUES ('HandrianBRND8','Handrian','BRND8',1,1,1,1)
--END
--GO

--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'GON_SEPARATED_DETAIL')C WHERE ColumnName = 'ITEM_OTHER')
--   ALTER TABLE GON_SEPARATED_DETAIL ADD ITEM_OTHER INT NULL;
--GO

----IF EXISTS(SELECT ColumnName FROM (
----   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
----   ON c.[object_id] = t.[object_id]
----   WHERE t.[name] = 'GON_SEPARATED_DETAIL')C WHERE ColumnName =  'ITEM')
----   ALTER TABLE GON_SEPARATED_DETAIL ALTER COLUMN ITEM VARCHAR(14) NULL;
----GO

--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'GON_SEPARATED_PO_DETAIL')C WHERE ColumnName = 'ITEM_OTHER')
--   ALTER TABLE GON_SEPARATED_PO_DETAIL ADD ITEM_OTHER INT NULL;

--/****** Object:  Table [dbo].[BRND_PROD_OTHER]    Script Date: 1/17/2024 1:45:36 PM ******/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--CREATE TABLE [dbo].[BRND_PROD_OTHER](
--	[IDApp] [int] IDENTITY(1,1) NOT NULL,
--	[ITEM] [varchar](150) NOT NULL,
--	[DESCRIPTION] [nvarchar](150) NULL,
--	[UNIT1] [varchar](30) NOT NULL,
--	[VOL1] [decimal](18, 3) NOT NULL,
--	[UNIT2] [varchar](30) NOT NULL,
--	[VOL2] [decimal](18, 3) NOT NULL,
--	[IsRowMat] [bit] NOT NULL,
--	[UnitOfMeasure] [varchar](10) NOT NULL,
--	[INACTIVE] [bit] NOT NULL,
--	[CreatedBy] [varchar](50) NULL,
--	[CreatedDate] [smalldatetime] NULL,
--	[ModifiedBy] [varchar](50) NULL,
--	[ModifiedDate] [smalldatetime] NULL,
-- CONSTRAINT [PK_BRND_PROD_OTHER] PRIMARY KEY CLUSTERED 
--(
--	[IDApp] ASC
--)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
--) ON [PRIMARY]
--GO
--ALTER TABLE [dbo].[BRND_PROD_OTHER] ADD  CONSTRAINT [DF_BRND_PROD_OTHER_VOL1]  DEFAULT ((0)) FOR [VOL1]
--GO
--ALTER TABLE [dbo].[BRND_PROD_OTHER] ADD  CONSTRAINT [DF_BRND_PROD_OTHER_VOL2]  DEFAULT ((0)) FOR [VOL2]
--GO
--ALTER TABLE [dbo].[BRND_PROD_OTHER] ADD  CONSTRAINT [DF_BRND_PROD_OTHER_IsRowMat]  DEFAULT ((0)) FOR [IsRowMat]
--GO
--ALTER TABLE [dbo].[BRND_PROD_OTHER] ADD  CONSTRAINT [DF_BRND_PROD_OTHER_INACTIVE]  DEFAULT ((0)) FOR [INACTIVE]
--GO

----IF EXISTS(SELECT ColumnName FROM (
----   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
----   ON c.[object_id] = t.[object_id]
----   WHERE t.[name] = 'GON_SEPARATED_PO_DETAIL')C WHERE ColumnName =  'BRANDPACK_ID')
----   ALTER TABLE GON_SEPARATED_PO_DETAIL ALTER COLUMN BRANDPACK_ID VARCHAR(14) NULL;
----GO
--IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE [TABLE_NAME] = 'uv_gon_separated_PO_Pending_Gon')
--DROP VIEW uv_gon_separated_PO_Pending_Gon
--GO
--CREATE VIEW [dbo].[uv_gon_separated_PO_Pending_Gon]
--AS
--SELECT ISNULL(GON.IDApp,0)AS IDApp,GSPD.IDApp AS IDAppPODetail,GSPH.PO_NUMBER,GSPH.SPPB_NUMBER,GSPH.PO_DATE,GSPH.SPPB_DATE,
--ITEM = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN  BP.BRANDPACK_NAME
-- WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN BPO.ITEM
--ELSE 'UNKNOWN' END,
--PO_CATEGORY = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN 'REG_FIN_GOODS'
-- WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN 'UNREG_FIN_GOODS'
--ELSE 'UNKNOWN' END,
--GSPD.QUANTITY AS PO_ORIGINAL,GSPD.STATUS,ISNULL(GON.GON_NUMBER,'PENDING GON')AS GON_NUMBER,
--SHIP_TO_CUSTOMER,GON.GON_DATE,
--GON.WARHOUSE,
--GON.TRANSPORTER_NAME, GON.POLICE_NO_TRANS,GON.DRIVER_TRANS,GON.QUANTITY,GON.QUANTITY_UNIT,GON.COLLY_BOX,GON.COLLY_PACKSIZE,GON.BATCH_NO,
--GON.CreatedBy,GON.CreatedDate,GON.ModifiedBy,GON.ModifiedDate 
--FROM GON_SEPARATED_PO_HEADER GSPH INNER JOIN GON_SEPARATED_PO_DETAIL GSPD ON GSPD.FKApp = GSPH.IDApp
--LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = GSPD.BRANDPACK_ID
--LEFT OUTER JOIN BRND_PROD_OTHER BPO ON BPO.IDApp = GSPD.ITEM_OTHER
--LEFT OUTER JOIN(
--SELECT GSD.IDApp,GSD.FKAppPODetail,GSH.FKApp,ISNULL(DR.DISTRIBUTOR_NAME,GSH.SHIP_TO_CUST) AS SHIP_TO_CUSTOMER,GSH.GON_NUMBER, 
--GSH.GON_DATE,CASE GSH.WARHOUSE WHEN 'SRG' THEN 'SERANG' WHEN 'SBY' THEN 'SURABAYA' WHEN 'JKT' THEN 'JAKARTA' WHEN 'MRK' THEN 'MERAK' WHEN 'TGR' THEN 'TANGERANG' ELSE 'UNKNOWN' END AS WARHOUSE,
--GT.TRANSPORTER_NAME, GSH.POLICE_NO_TRANS,GSH.DRIVER_TRANS,GSD.QTY AS QUANTITY,
--QUANTITY_UNIT = CASE WHEN (GSD.ITEM IS NOT NULL) THEN (CONVERT(VARCHAR(20),GSD.QTY) + ' ' + BP.UNIT)
--WHEN (GSD.ITEM_OTHER IS NOT NULL) THEN (CONVERT(VARCHAR(20),GSD.QTY) + BPO1.UnitOfMeasure)
--ELSE '0' END,
--GSD.COLLY_BOX,GSD.COLLY_PACKSIZE,ISNULL(GSD.BATCH_NO,'') AS BATCH_NO,
--GSD.CreatedBy,GSD.CreatedDate,GSD.ModifiedBy,GSD.ModifiedDate
--FROM GON_SEPARATED_DETAIL GSD INNER JOIN GON_SEPARATED_HEADER GSH ON GSH.IDApp = GSD.FKAppGonHeader
--INNER JOIN GON_TRANSPORTER GT ON GT.GT_ID = GSH.TRANSPORTER 
--LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = GSD.ITEM 
--LEFT OUTER JOIN BRND_PROD_OTHER BPO1 ON BPO1.IDApp = GSD.ITEM_OTHER
--LEFT OUTER JOIN DIST_DISTRIBUTOR DR ON DR.DISTRIBUTOR_ID = GSH.SHIP_TO 
--)GON ON GON.FKAppPODetail = GSPD.IDApp
--AND GON.FKApp = GSPH.IDApp
--WHERE GSPD.STATUS='Pending' AND GON.GON_NUMBER IS NULL
--GO

--IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE [TABLE_NAME] = 'uv_gon_separated_PO_Status_Completed')
--DROP VIEW uv_gon_separated_PO_Status_Completed
--GO
--CREATE VIEW uv_gon_separated_PO_Status_Completed
--AS
--SELECT ISNULL(GSD.IDApp,0)AS IDApp,GSPD.IDApp AS IDAppPODetail,GSPH.PO_NUMBER,GSPH.SPPB_NUMBER,GSPH.PO_DATE,GSPH.SPPB_DATE,
--ITEM = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN  BP.BRANDPACK_NAME
-- WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN BPO.ITEM
--ELSE 'UNKNOWN' END,
--GSPD.QUANTITY AS PO_ORIGINAL,
--PO_CATEGORY = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN 'REG_FIN_GOODS'
-- WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN 'UNREG_FIN_GOODS'
--ELSE 'UNKNOWN' END,
--GSPD.STATUS,ISNULL(GSH.GON_NUMBER,'PENDING GON')AS GON_NUMBER,ISNULL(DR.DISTRIBUTOR_NAME,GSH.SHIP_TO_CUST) AS SHIP_TO_CUSTOMER,GSH.GON_DATE,
--CASE GSH.WARHOUSE WHEN 'SRG' THEN 'SERANG' WHEN 'SBY' THEN 'SURABAYA' WHEN 'JKT' THEN 'JAKARTA' WHEN 'MRK' THEN 'MERAK' WHEN 'TGR' THEN 'TANGERANG' ELSE 'UNKNOWN' END AS WARHOUSE,
--GT.TRANSPORTER_NAME, GSH.POLICE_NO_TRANS,GSH.DRIVER_TRANS,GSD.QTY AS QUANTITY,
--QUANTITY_UNIT = CASE WHEN (GSD.ITEM IS NOT NULL) THEN (CONVERT(VARCHAR(20),GSD.QTY) + ' ' + BP.UNIT)
--WHEN (GSD.ITEM_OTHER IS NOT NULL) THEN (CONVERT(VARCHAR(20),GSD.QTY) + BPO.UnitOfMeasure)
--ELSE '0' END,
--GSD.COLLY_BOX,GSD.COLLY_PACKSIZE,ISNULL(GSD.BATCH_NO,'') AS BATCH_NO,
--GSD.CreatedBy,GSD.CreatedDate,GSD.ModifiedBy,GSD.ModifiedDate 
--FROM GON_SEPARATED_PO_HEADER GSPH INNER JOIN GON_SEPARATED_PO_DETAIL GSPD ON GSPD.FKApp = GSPH.IDApp
--LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = GSPD.BRANDPACK_ID
--LEFT OUTER JOIN BRND_PROD_OTHER BPO ON BPO.IDApp = GSPD.ITEM_OTHER
--LEFT OUTER JOIN GON_SEPARATED_HEADER GSH ON GSH.FKApp = GSPH.IDApp
--LEFT OUTER JOIN GON_SEPARATED_DETAIL GSD ON GSH.IDApp = GSD.FKAppGonHeader
----ON GSD.ITEM_OTHER = BPO.IDApp
--AND GSD.FKAppPODetail = GSPD.IDApp 
----AND GSD.ITEM = BP.BRANDPACK_ID 
--LEFT OUTER JOIN DIST_DISTRIBUTOR DR ON DR.DISTRIBUTOR_ID = GSH.SHIP_TO 
--LEFT OUTER JOIN GON_TRANSPORTER GT ON GT.GT_ID = GSH.TRANSPORTER 
--WHERE GSPD.STATUS='Completed'
--GO

--IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE [TABLE_NAME] = 'uv_gon_separated_PO_All')
--DROP VIEW uv_gon_separated_PO_All
--GO
--CREATE VIEW uv_gon_separated_PO_All
--AS
--SELECT ISNULL(GSD.IDApp,0)AS IDApp,GSPD.IDApp AS IDAppPODetail,GSPH.PO_NUMBER,GSPH.SPPB_NUMBER,GSPH.PO_DATE,GSPH.SPPB_DATE,
--ITEM = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN  BP.BRANDPACK_NAME
--WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN BPO.ITEM
--ELSE 'UNKNOWN' END,
--GSPD.QUANTITY AS PO_ORIGINAL,
--PO_CATEGORY = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN 'REG_FIN_GOODS'
--WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN 'UNREG_FIN_GOODS'
--ELSE 'UNKNOWN' END,
--GSPD.STATUS,
--GON_NUMBER = CASE WHEN GSPD.STATUS = 'PENDING' THEN 'PENDING GON'
--WHEN GSH.GON_NUMBER IS NULL THEN 'PENDING GON'
--WHEN GSH.GON_NUMBER IS NOT NULL THEN GSH.GON_NUMBER END,
--ISNULL(DR.DISTRIBUTOR_NAME,GSH.SHIP_TO_CUST) AS SHIP_TO_CUSTOMER,GSH.GON_DATE,
--CASE GSH.WARHOUSE WHEN 'SRG' THEN 'SERANG' WHEN 'SBY' THEN 'SURABAYA' WHEN 'JKT' THEN 'JAKARTA' WHEN 'MRK' THEN 'MERAK' WHEN 'TGR' THEN 'TANGERANG' ELSE 'UNKNOWN' END AS WARHOUSE,
--GT.TRANSPORTER_NAME, GSH.POLICE_NO_TRANS,GSH.DRIVER_TRANS,GSD.QTY AS QUANTITY,CONVERT(VARCHAR(20),GSD.QTY) + ' ' + BP.UNIT AS QUANTITY_UNIT,GSD.COLLY_BOX,GSD.COLLY_PACKSIZE,ISNULL(GSD.BATCH_NO,'') AS BATCH_NO,
--GSD.CreatedBy,GSD.CreatedDate,GSD.ModifiedBy,GSD.ModifiedDate 
--FROM GON_SEPARATED_PO_HEADER GSPH INNER JOIN GON_SEPARATED_PO_DETAIL GSPD ON GSPD.FKApp = GSPH.IDApp
--LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = GSPD.BRANDPACK_ID
--LEFT OUTER JOIN BRND_PROD_OTHER BPO ON BPO.IDApp = GSPD.ITEM_OTHER
--LEFT OUTER JOIN GON_SEPARATED_HEADER GSH ON GSH.FKApp = GSPH.IDApp
--LEFT OUTER JOIN DIST_DISTRIBUTOR DR ON DR.DISTRIBUTOR_ID = GSH.SHIP_TO 
--LEFT OUTER JOIN GON_TRANSPORTER GT ON GT.GT_ID = GSH.TRANSPORTER 
--LEFT OUTER JOIN GON_SEPARATED_DETAIL GSD ON GSH.IDApp = GSD.FKAppGonHeader
--AND GSD.FKAppPODetail = GSPD.IDApp 
----AND GSD.ITEM = BP.BRANDPACK_ID 
--GO

--IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE [TABLE_NAME] = 'uv_gon_separated_PO')
--DROP VIEW uv_gon_separated_PO
--GO
--CREATE VIEW uv_gon_separated_PO
--AS
--SELECT GSD.IDApp,GSPD.IDApp AS IDAppPODetail,GSPH.PO_NUMBER,GSPH.SPPB_NUMBER,GSPH.PO_DATE,GSPH.SPPB_DATE,
--ITEM = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN  BP.BRANDPACK_NAME
--WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN BPO.ITEM
--ELSE 'UNKNOWN' END,
--GSPD.QUANTITY AS PO_ORIGINAL,
--PO_CATEGORY = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN 'REG_FIN_GOODS'
--WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN 'UNREG_FIN_GOODS'
--ELSE 'UNKNOWN' END,
--GSPD.STATUS,ISNULL(GSH.GON_NUMBER,'PENDING GON')AS GON_NUMBER,ISNULL(DR.DISTRIBUTOR_NAME,GSH.SHIP_TO_CUST) AS SHIP_TO_CUSTOMER,GSH.GON_DATE,
--CASE GSH.WARHOUSE WHEN 'SRG' THEN 'SERANG' WHEN 'SBY' THEN 'SURABAYA' WHEN 'JKT' THEN 'JAKARTA' WHEN 'MRK' THEN 'MERAK' WHEN 'TGR' THEN 'TANGERANG' ELSE 'UNKNOWN' END AS WARHOUSE,
--GT.TRANSPORTER_NAME, GSH.POLICE_NO_TRANS,GSH.DRIVER_TRANS,GSD.QTY AS QUANTITY,CONVERT(VARCHAR(20),GSD.QTY) + ' ' + BP.UNIT AS QUANTITY_UNIT,GSD.COLLY_BOX,GSD.COLLY_PACKSIZE,ISNULL(GSD.BATCH_NO,'') AS BATCH_NO,
--GSD.CreatedBy,GSD.CreatedDate,GSD.ModifiedBy,GSD.ModifiedDate 
--FROM GON_SEPARATED_PO_HEADER GSPH INNER JOIN GON_SEPARATED_PO_DETAIL GSPD ON GSPD.FKApp = GSPH.IDApp
--LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = GSPD.BRANDPACK_ID
--LEFT OUTER JOIN BRND_PROD_OTHER BPO ON BPO.IDApp = GSPD.ITEM_OTHER
--INNER JOIN GON_SEPARATED_DETAIL GSD ON GSD.FKAppPODetail = GSPD.IDApp
--INNER JOIN GON_SEPARATED_HEADER GSH ON GSH.FKApp = GSPH.IDApp
--LEFT OUTER JOIN DIST_DISTRIBUTOR DR ON DR.DISTRIBUTOR_ID = GSH.SHIP_TO 
--INNER JOIN GON_TRANSPORTER GT ON GT.GT_ID = GSH.TRANSPORTER 
--AND GSH.IDApp = gsd.FKAppGonHeader  
----AND GSD.ITEM = BP.BRANDPACK_ID 
--GO
--=======================SUDAH ============================

--========================20240318========================
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--ALTER PROCEDURE [dbo].[Usp_Create_Temp_Invoice_Table_NI109]
--@DEC_START_DATE NUMERIC(9,0),@DEC_END_DATE NUMERIC(9,0),
--@COMPUTERNAME VARCHAR(100)
--AS
--SET NOCOUNT ON;
--DECLARE @Statement NVARCHAR(4000);

--SET @Statement = 'SELECT REPLACE(SUBSTRING(REPLACE(RIGHT(RTRIM(INV.ITEM),14),''-'',''''),2,9),''25HM'',''025G'')AS BRANDPACK_ID,RTRIM(LTRIM(REPLACE(INV.BRANDPACK_NAME,'' (HM)'',''''))) AS BRANDPACK_NAME,
--      INV.QTYSHIPPED - INV.QTYRETURN AS QTY,RTRIM(INV.INVNUMBER)AS INVNUMBER, RTRIM(INV.PONUMBER) AS PONUMBER,RTRIM(INV.REFERENCE)AS REFERENCE,INV.INVDATE,INV.UNITPRICE, 
--	 (INV.QTYSHIPPED - INV.QTYRETURN)* INV.UNITPRICE AS INV_AMOUNT,INV.AUDTUSER
--      INTO tempdb..##T_SELECT_INVOICE_' + @COMPUTERNAME + ' FROM
--      (
--       SELECT INVH.INVDATE,INVH.INVNUMBER,INVH.PONUMBER,RTRIM(ORD1.VALUE)AS REFERENCE,
--	   INVD1.ITEM,INVD1.BRANDPACK_NAME,INVD1.QTYSHIPPED,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN,INVD1.UNITPRICE,
--	   INVH.AUDTUSER
--       FROM NI109.dbo.OEINVH INVH INNER JOIN
--	   (
--	    SELECT INVD.INVUNIQ,INVD.ITEM,INVD.[DESC] AS BRANDPACK_NAME,SUM(INVD.QTYSHIPPED) AS QTYSHIPPED,INVD.UNITPRICE
--	    FROM NI109.dbo.OEINVD INVD
--		WHERE (RTRIM(INVD.ACCTSET) = ''FG'' OR RTRIM(INVD.ACCTSET) = ''FGST'' OR RTRIM(INVD.ACCTSET) = ''FGTOLL'') AND INVD.LINETYPE = 1
--        AND LEN(RIGHT(RTRIM(INVD.ITEM),11)) >= 11 GROUP BY INVD.ITEM, INVD.INVUNIQ,INVD.[DESC],INVD.UNITPRICE
--	   )INVD1
--	   ON INVH.INVUNIQ = INVD1.INVUNIQ
--       INNER JOIN NI109.DBO.OEORDH ORD ON ORD.ORDNUMBER = INVH.ORDNUMBER
--       INNER JOIN NI109.DBO.OEORDHO ORD1 ON ORD.ORDUNIQ = ORD1.ORDUNIQ
--       LEFT OUTER JOIN
--                  (
--		   SELECT CRDH1.INVNUMBER,CRDH1.ITEM,ISNULL(SUM(CRDH1.QTYRETURN),0)AS QTYRETURN
--		   FROM 
--			(								
--                   	  SELECT CRDH.CRDUNIQ,CRDH.INVNUMBER,CRDH.CRDDATE,CRD.ITEM,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN
--                          FROM NI109.DBO.OECRDH CRDH INNER JOIN 
--                          (
--                            SELECT CRDUNIQ,ITEM,ISNULL(SUM(QTYRETURN),0)AS QTYRETURN
--                            FROM NI109.DBO.OECRDD WHERE LINETYPE = 1 AND (RTRIM(ACCTSET) = ''FG'' OR RTRIM(ACCTSET) = ''FGST'' OR RTRIM(ACCTSET) = ''FGTOLL'')
--						    GROUP BY CRDUNIQ,ITEM
--                           )CRD ON CRDH.CRDUNIQ = CRD.CRDUNIQ      
--                         )CRDH1
--                   WHERE CRDH1.CRDDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
--                   ' GROUP BY CRDH1.INVNUMBER,CRDH1.ITEM    
--                  )CRD
--        ON CRD.INVNUMBER = INVH.INVNUMBER 
--        AND CRD.ITEM = INVD1.ITEM
--        WHERE RTRIM(ORD1.OPTFIELD) = ''DTSREF''
--        AND LEN(RTRIM(ORD1.VALUE)) >= 4
--        AND INVH.INVDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
--        ' AND INVH.INVDATE <= ' + CAST(@DEC_END_DATE AS VARCHAR(20)) + '' +
--	  ')INV;
--   CREATE CLUSTERED INDEX IDX_T_S_I ON ##T_SELECT_INVOICE_' + @COMPUTERNAME + '(INVDATE,QTY,BRANDPACK_ID,REFERENCE);'
--execute sp_executesql @stmt = @statement;

--============================================

--===============03/20/2024===========
--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'BRND_PROD_OTHER')C WHERE ColumnName = 'DEVIDED_QUANTITY')
--   ALTER TABLE BRND_PROD_OTHER ADD DEVIDED_QUANTITY decimal(18,3) NOT NULL DEFAULT 0;
--GO
--ALTER TABLE GON_SEPARATED_DETAIL ALTER COLUMN ITEM VARCHAR(14) null

--==============05/15/2024=============
--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'ACHIEVEMENT_HEADER')C WHERE ColumnName = 'PBF2_DIST')
--   ALTER TABLE ACHIEVEMENT_HEADER ADD PBF2_DIST decimal(18,3) NOT NULL DEFAULT 0;
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'ACHIEVEMENT_HEADER')C WHERE ColumnName = 'TOTAL_PBF2')
--   ALTER TABLE ACHIEVEMENT_HEADER ADD TOTAL_PBF2 decimal(18,3) NOT NULL DEFAULT 0;
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'ACHIEVEMENT_DETAIL')C WHERE ColumnName = 'TOTAL_PBF2')
--   ALTER TABLE ACHIEVEMENT_DETAIL ADD TOTAL_PBF2 decimal(18,3) NOT NULL DEFAULT 0;
--GO

--ALTER TABLE GON_SEPARATED_DETAIL ALTER COLUMN ITEM VARCHAR(14) null

--IF NOT EXISTS(SELECT FORM_ID FROM SYST_MENU WHERE FORM_ID = 'GUF003')
--	INSERT INTO SYST_MENU(FORM_ID,FORM_NAME,MENU_NAME,DESCRIPTIONS)
--	VALUES('GUG003','QtyConvertion','Manually Qty Convertion','untuk mengecek qty jadi colly');

IF NOT EXISTS(SELECT ColumnName FROM (
   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
   ON c.[object_id] = t.[object_id]
   WHERE t.[name] = 'DIST_DISTRIBUTOR')C WHERE ColumnName = 'EMAIL')
   ALTER TABLE DIST_DISTRIBUTOR ADD EMAIL NVARCHAR(150) NULL;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
   ON c.[object_id] = t.[object_id]
   WHERE t.[name] = 'DIST_DISTRIBUTOR')C WHERE ColumnName = 'ALT_EMAIL')
   ALTER TABLE DIST_DISTRIBUTOR ADD ALT_EMAIL NVARCHAR(150) NULL;
GO

IF EXISTS(SELECT NAME FROM [DBO].SYSOBJECTS WHERE NAME = 'Sp_Insert_Distributor' AND TYPE = 'P')
DROP PROCEDURE Sp_Insert_Distributor
GO
CREATE PROCEDURE Sp_Insert_Distributor
@DISTRIBUTOR_ID VARCHAR(10),
@DISTRIBUTOR_NAME VARCHAR(50),
@RESPONSIBLE_PERSON VARCHAR(50),
@TERRITORY_ID VARCHAR(10),
@PARENT_DISTRIBUTOR_ID VARCHAR(10),
@NPWP VARCHAR(30),
@MAX_DISC_PER_PO DECIMAL(10,3),
@ADDRESS VARCHAR(150),
@CONTACT VARCHAR(30),
@PHONE VARCHAR(30),
@FAX VARCHAR(20),
@HP VARCHAR(20),
@BIRTH_DATE DATETIME,
@CREATE_BY VARCHAR(30),
@JOIN_DATE SMALLDATETIME,
@HP1 VARCHAR(20) =  NULL,
@EMAIL NVARCHAR(150),
@ALT_EMAIL NVARCHAR(150)
AS
SET NOCOUNT ON;
INSERT INTO Nufarm.dbo.DIST_DISTRIBUTOR(DISTRIBUTOR_ID,DISTRIBUTOR_NAME,RESPONSIBLE_PERSON,TERRITORY_ID,
PARENT_DISTRIBUTOR_ID,NPWP,MAX_DISC_PER_PO,ADDRESS,CONTACT,PHONE,FAX,HP,HP1,BIRTH_DATE,JOIN_DATE,EMAIL,ALT_EMAIL,CREATE_BY,CREATE_DATE)
VALUES(@DISTRIBUTOR_ID,@DISTRIBUTOR_NAME,@RESPONSIBLE_PERSON,@TERRITORY_ID,@PARENT_DISTRIBUTOR_ID,@NPWP,
@MAX_DISC_PER_PO,@ADDRESS,@CONTACT,@PHONE,@FAX,@HP,@HP1,@BIRTH_DATE,@JOIN_DATE,@EMAIL,@ALT_EMAIL,@CREATE_BY,getdate())
GO

IF EXISTS(SELECT NAME FROM dbo.SYSOBJECTS WHERE NAME = 'Sp_Update_Distributor' AND TYPE = 'P')
DROP PROCEDURE Sp_Update_Distributor
GO
CREATE PROCEDURE Sp_Update_Distributor
@DISTRIBUTOR_ID VARCHAR(10),
@DISTRIBUTOR_NAME VARCHAR(50),
@RESPONSIBLE_PERSON VARCHAR(50),
@TERRITORY_ID VARCHAR(10),
@PARENT_DISTRIBUTOR_ID VARCHAR(10),
@NPWP VARCHAR(30),
@MAX_DISC_PER_PO DECIMAL(10,3),
@ADDRESS VARCHAR(150),
@CONTACT VARCHAR(30),
@PHONE VARCHAR(30),
@FAX VARCHAR(20),
@HP VARCHAR(20),
@BIRTH_DATE DATETIME,
@MODIFY_BY VARCHAR(30),
@JOIN_DATE SMALLDATETIME,
@HP1 VARCHAR(20) =  NULL,
@EMAIL NVARCHAR(150),
@ALT_EMAIL NVARCHAR(150)
AS
SET NOCOUNT ON;
UPDATE Nufarm.dbo.DIST_DISTRIBUTOR
SET DISTRIBUTOR_NAME = @DISTRIBUTOR_NAME,RESPONSIBLE_PERSON = @RESPONSIBLE_PERSON,
TERRITORY_ID = @TERRITORY_ID,PARENT_DISTRIBUTOR_ID = @PARENT_DISTRIBUTOR_ID,
NPWP = @NPWP,MAX_DISC_PER_PO = @MAX_DISC_PER_PO,ADDRESS =@ADDRESS,CONTACT =@CONTACT,
PHONE = @PHONE,FAX = @FAX,HP = @HP,HP1 = @HP1,JOIN_DATE = @JOIN_DATE,MODIFY_BY = @MODIFY_BY,BIRTH_DATE = @BIRTH_DATE,MODIFY_DATE = GETDATE(),
EMAIL = @EMAIL, ALT_EMAIL = @ALT_EMAIL
WHERE DISTRIBUTOR_ID = @DISTRIBUTOR_ID
GO

IF EXISTS(SELECT NAME FROM [DBO].SYSOBJECTS WHERE NAME = 'Usp_Check_Availability_Disc_Other' AND TYPE = 'P')
DROP PROCEDURE Usp_Check_Availability_Disc_Other
GO
CREATE PROCEDURE Usp_Check_Availability_Disc_Other
@DISTRIBUTOR_ID VARCHAR(10),
@BRANDPACK_ID VARCHAR(14),
@O_DEVIDED_QTY DECIMAL(18,3) OUTPUT,
@O_DEVIDE_FACTOR DECIMAL(18,3) OUTPUT,
@PO_DATE SMALLDATETIME,
@O_UNIT VARCHAR(15) OUTPUT,
@O_DD BIT OUTPUT,
@O_DR BIT OUTPUT,
@O_CBD BIT OUTPUT,
@O_DK BIT OUTPUT,
@O_DP BIT OUTPUT,
@IDApp INT
AS 
--SET NOCOUNT ON
DECLARE @V_BRAND_ID VARCHAR(7),@V_ApplyTo VARCHAR(5),@V_ApplyDate SMALLDATETIME,@V_START_DATE_PKD SMALLDATETIME,@V_IsDiscByBrandPack BIT,@V_IsDiscByBrandPackForAll BIT,
@V_IsByBrand bit,@V_END_DATE_PKD SMALLDATETIME;
SELECT @O_DEVIDED_QTY = (SELECT DEVIDED_QUANTITY FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
SELECT @O_DEVIDE_FACTOR = (SELECT TOP 1 DEVIDE_FACTOR FROM BRND_PACK WHERE PACK_ID = (SELECT TOP 1 PACK_ID FROM BRND_BRANDPACK 
						   WHERE BRANDPACK_ID = @BRANDPACK_ID));
SELECT @O_UNIT = (SELECT UNIT FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
SELECT TOP 1 @V_ApplyTo = APPLY_TO,@V_ApplyDate = APPLY_DATE FROM BRND_DISC_HEADER WHERE IDApp = @IDApp 
IF @IDApp > 0
	BEGIN 
		 SET @V_BRAND_ID = (SELECT BRAND_ID FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID);
		 --check apakah discount by brandpack/by brand
		 IF (SELECT COUNT(*) FROM BRND_DISC_LIST_BRANDPACK WHERE FKApp = @IDApp) > 0
			--DISCOUNT BY BRANDPACK BERARTI
			BEGIN 
			--CHECK APAKAH BrandPack nya sama 
				SET @V_IsDiscByBrandPack = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT IDApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SET @V_IsDiscByBrandPackForAll = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT IDApp FROM BRND_DISC_LIST_BRANDPACK WHERE FKApp = @IDApp AND BRANDPACK_ID =@BRANDPACK_ID)),0));
				IF @V_IsDiscByBrandPackForAll = 0 
					RETURN 0;	 
				
			END
		 ELSE IF EXISTS(SELECT BDLB.BRAND_ID FROM BRND_DISC_LIST_BRAND BDLB INNER JOIN BRND_DISC_PROG BDP ON BDLB.BRAND_ID = BDP.BRAND_ID
						WHERE BDlB.BRAND_ID = @V_BRAND_ID AND BDP.FKApp = @IDApp)
				SET @V_IsByBrand = 1;
		 ELSE IF NOT EXISTS(SELECT BRAND_ID FROM BRND_DISC_LIST_BRAND WHERE BRAND_ID = @V_BRAND_ID AND FKApp = @IDApp)
			RETURN 0;				
		IF @V_IsDiscByBrandPack > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'Dk' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP' AND BRANDPACK_ID = @BRANDPACK_ID)),0));	
			END
		ELSE IF @V_IsDiscByBrandPackForAll > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD')),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR')),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD')),0));
				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DK')),0));	
				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP')),0));	
			END
		ELSE IF @V_IsByBrand > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DK' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP' AND BRAND_ID = @V_BRAND_ID)),0));
			END
		ELSE
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD')),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR')),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD')),0));
				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DK')),0));
				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP')),0));	
			END	
		IF @V_ApplyTo = 'AL'
			RETURN 1
		 IF @V_ApplyTo = 'CD'
			BEGIN
                SELECT TOP 1 @V_START_DATE_PKD = AA.START_DATE,@V_END_DATE_PKD = AA.END_DATE FROM AGREE_AGREEMENT AA  
                INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN AGREE_BRANDPACK_INCLUDE ABP ON ABP.AGREEMENT_NO = AA.AGREEMENT_NO  
                WHERE AA.END_DATE >= @PO_DATE AND AA.START_DATE <= @PO_DATE AND DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABP.BRANDPACK_ID = @BRANDPACK_ID ; 
                IF (@V_ApplyDate >=@V_START_DATE_PKD) AND (@V_ApplyDate <=@V_END_DATE_PKD)  
                BEGIN 				
				  RETURN(SELECT 1 WHERE EXISTS(SELECT DISTRIBUTOR_ID FROM DIST_DISC_BRAND_LIST WHERE DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND FKApp = @IDApp));  
                END 
			END
		 ELSE IF @V_ApplyTo = 'GD'
			BEGIN
				SELECT TOP 1 @V_START_DATE_PKD = AA.START_DATE,@V_END_DATE_PKD = AA.END_DATE FROM AGREE_AGREEMENT AA 
                INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN AGREE_BRANDPACK_INCLUDE ABP ON ABP.AGREEMENT_NO = AA.AGREEMENT_NO 
                WHERE AA.END_DATE >= @PO_DATE AND AA.START_DATE <= @PO_DATE AND DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABP.BRANDPACK_ID = @BRANDPACK_ID ;
                IF (@V_ApplyDate >=@V_START_DATE_PKD) AND (@V_ApplyDate <=@V_END_DATE_PKD)   
				BEGIN 
					RETURN (SELECT 1 WHERE EXISTS(SELECT DGL.DISTRIBUTOR_ID FROM DIST_GROUP_LIST DGL INNER JOIN DIST_GROUP_BRND_LIST GBL ON GBL.FKGroup = DGL.GRP_ID 
                    WHERE GBL.FKDisc = @IDApp AND DGL.DISTRIBUTOR_ID = @DISTRIBUTOR_ID));
				END
			END
	END
ELSE
	RETURN 0
GO

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Check_Sum_Mathching_Disc_Qty'
 AND TYPE = 'P')
DROP PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
GO
CREATE PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
@OA_BRANDPACK_ID VARCHAR(75),
@DISCOUNT_TYPE VARCHAR(50)
AS
EXECUTE sp_executesql
N'SET NOCOUNT ON;
IF (@V_DISCOUNT_TYPE = ''Sales_Discount'')
   BEGIN
 	DECLARE @SUM_PROG_DISC_QTY DECIMAL(18,3),@PROG_DISC_QTY DECIMAL(18,3);
	SET @PROG_DISC_QTY =  (SELECT PROG_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3))
	SET @SUM_PROG_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	                         WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''MG'',''KP'',''CR'',''CP'',''MS'',''DK'',''CS'',''TD'',''TS'',''CD'',''CT'',''DN'',''CA''));
        UPDATE ORDR_OA_BRANDPACK SET PROG_DISC_QTY = @SUM_PROG_DISC_QTY
		WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
		
   END
ELSE IF (@V_DISCOUNT_TYPE = ''Agreement_Discount'')
     BEGIN
	  DECLARE @SUM_AGREE_DISC_QTY DECIMAL(18,3),@AGREE_DISC_QTY DECIMAL(18,3)
	    SET @AGREE_DISC_QTY = (SELECT AGREE_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3));
	    SET @SUM_AGREE_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
            WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''G'',''Q1'',''Q2'',''Q3'',''Q4'',''S1'',''S2'',''Y''));
	    
            UPDATE ORDR_OA_BRANDPACK SET AGREE_DISC_QTY = @SUM_AGREE_DISC_QTY
	    WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
     END
ELSE IF (@V_DISCOUNT_TYPE = ''Other_Discount'')
      BEGIN
	   DECLARE @SUM_OTHER_DISC_QTY DECIMAL(18,3),@OTHER_DISC_QTY DECIMAL(18,3);
	     SET @OTHER_DISC_QTY = CAST((SELECT OTHER_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
	     SET @SUM_OTHER_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	     WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''O'',''OCBD'',''ODD'',''ODR'',''ODK'',''ODP''));   
	    
             UPDATE ORDR_OA_BRANDPACK SET OTHER_DISC_QTY = @SUM_OTHER_DISC_QTY
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
      END
ELSE IF (@V_DISCOUNT_TYPE = ''Project_Discount'')
     BEGIN
	  DECLARE @SUM_PROJ_DISC_QTY DECIMAL(18,3),@PROJ_DISC_QTY DECIMAL(18,3);
	     SET @PROJ_DISC_QTY = CAST((SELECT PROJ_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
             SET @SUM_PROJ_DISC_QTY = CAST((SELECT ISNULL(SUM(DISC_QTY),0)
	        FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND
	        GQSY_SGT_P_FLAG = ''P'')AS DECIMAL(18,3));
	     UPDATE ORDR_OA_BRANDPACK SET PROJ_DISC_QTY = @SUM_PROJ_DISC_QTY 
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;	
      END',N'@V_OA_BRANDPACK_ID VARCHAR(70),@V_DISCOUNT_TYPE VARCHAR(50)',
     @V_OA_BRANDPACK_ID = @OA_BRANDPACK_ID,@V_DISCOUNT_TYPE = @DISCOUNT_TYPE;         	
GO
-- view untuk di multicolumn combo form distributor agreement
IF EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS
      WHERE TABLE_NAME = 'VIEW_DISTRIBUTOR')
  DROP VIEW VIEW_DISTRIBUTOR
GO
CREATE VIEW VIEW_DISTRIBUTOR
AS
SELECT DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,DR.CONTACT,DR.PHONE,DR.INACTIVE,DR.TERRITORY_ID,TER.TERRITORY_AREA,
RG.REGIONAL_AREA FROM DIST_DISTRIBUTOR DR LEFT OUTER JOIN TERRITORY TER ON DR.TERRITORY_ID = TER.TERRITORY_ID
LEFT OUTER JOIN DIST_REGIONAL RG ON TER.REGIONAL_ID = RG.REGIONAL_ID
GO
--
IF NOT EXISTS(SELECT ColumnName FROM (
   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
   ON c.[object_id] = t.[object_id]
   WHERE t.[name] = 'TERRITORY')C WHERE ColumnName = 'TERRITORY_FOR')
   ALTER TABLE TERRITORY ADD TERRITORY_FOR VARCHAR(5) NULL;
GO

EXEC sys.sp_addextendedproperty @name = N'MS_Description', 
@value = N'Kode Sales Person = SP, Distributor = DR', 
@level0type = N'SCHEMA',
@level0name = N'dbo',
@level1type = N'TABLE',
@level1name = N'TERRITORY',
@level2type = N'COLUMN',
@level2name = N'TERRITORY_FOR'
GO

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_Distributor_Report_1' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Distributor_Report_1
GO
CREATE PROCEDURE Usp_Create_View_Distributor_Report_1
@StartDate DateTime,
@EndDate DateTime
AS 
SET NOCOUNT ON;
IF (@StartDate IS NOT NULL AND @EndDate IS NOT NULL)
BEGIN
	 SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,OPB.DESCRIPTIONS2 AS CSE_REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OA_DISC.CP_R,
	OA_DISC.CP_D_AUTO,OA_DISC.OTHER,OA_DISC.OTHER_DD,OA_DISC.OTHER_DR,OA_DISC.OTHER_DK,OA_DISC.OTHER_CBD,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES         
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CA' THEN DISC_QTY ELSE 0 END) AS CP_D_AUTO,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END) AS OTHER,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODD' THEN DISC_QTY ELSE 0 END) AS OTHER_DD,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODR' THEN DISC_QTY ELSE 0 END) AS OTHER_DR,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'OCBD' THEN DISC_QTY ELSE 0 END) AS OTHER_CBD,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODK' THEN DISC_QTY ELSE 0 END) AS OTHER_DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODP' THEN DISC_QTY ELSE 0 END) AS OTHER_DP
					 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE >= @StartDate AND OPO.PO_REF_DATE <= @EndDate
END
ELSE IF (@StartDate IS NOT NULL)
BEGIN
	 SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,OPB.DESCRIPTIONS2 AS CSE_REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OA_DISC.CP_R,
	OA_DISC.CP_D_AUTO,OA_DISC.OTHER,OA_DISC.OTHER_DD,OA_DISC.OTHER_DR,OA_DISC.OTHER_DK,OA_DISC.OTHER_CBD,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES              
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CA' THEN DISC_QTY ELSE 0 END) AS CP_D_AUTO,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODD' THEN DISC_QTY ELSE 0 END) AS OTHER_DD,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODR' THEN DISC_QTY ELSE 0 END) AS OTHER_DR,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'OCBD' THEN DISC_QTY ELSE 0 END) AS OTHER_CBD,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODK' THEN DISC_QTY ELSE 0 END) AS OTHER_DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODP' THEN DISC_QTY ELSE 0 END) AS OTHER_DP
	            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE >= @StartDate
END
ELSE IF (@EndDate IS NOT NULL)
BEGIN
   SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,OPB.DESCRIPTIONS2 AS CSE_REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OA_DISC.CP_R,
	OA_DISC.CP_D_AUTO,OA_DISC.OTHER,OA_DISC.OTHER_DD,OA_DISC.OTHER_DR,OA_DISC.OTHER_DK,OA_DISC.OTHER_CBD,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES       
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CA' THEN DISC_QTY ELSE 0 END) AS CP_D_AUTO,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END) AS OTHER,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODD' THEN DISC_QTY ELSE 0 END) AS OTHER_DD,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODR' THEN DISC_QTY ELSE 0 END) AS OTHER_DR,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'OCBD' THEN DISC_QTY ELSE 0 END) AS OTHER_CBD,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODK' THEN DISC_QTY ELSE 0 END) AS OTHER_DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODP' THEN DISC_QTY ELSE 0 END) AS OTHER_DP
	            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE <= @EndDate
END
GO

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'GP_ID' AND [TABLE_NAME] = 'ACHIEVEMENT_HEADER')
BEGIN
ALTER TABLE ACHIEVEMENT_HEADER ADD GP_ID INT NULL
END
GO

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Target_DPD_FMP_Nufarm' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Target_DPD_FMP_Nufarm
GO
CREATE PROCEDURE Usp_Get_Target_DPD_FMP_Nufarm
@START_DATE SMALLDATETIME,@END_DATE SMALLDATETIME
AS
SET NOCOUNT ON;
SELECT TER.TERRITORY_AREA,DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,AA.AGREEMENT_NO,AA.END_DATE,ABI.BRAND_ID,BN.BRAND_NAME,
ISCombined = CASE 
                 WHEN ABI.COMB_AGREE_BRAND_ID IS NOT NULL THEN 'YES'
                 ELSE 'NO'
			 END,
ABI.TARGET_FMP1,ABI.TARGET_FMP2,ABI.TARGET_FMP3,(ABI.TARGET_FMP1 + ABI.TARGET_FMP2 + ABI.TARGET_FMP3) AS TARGET_YEAR_FMP,
ABI.TARGET_FMP_FM1,ABI.TARGET_FMP_FM1 * AVGP.AVGPRICE AS TARGET_FMP_FM1_VALUE,ABI.TARGET_FMP_FM2,ABI.TARGET_FMP_FM2 * AVGP.AVGPRICE AS TARGET_FMP_FM2_VALUE,
ABI.TARGET_FMP_FM3,ABI.TARGET_FMP_FM3 * AVGP.AVGPRICE AS TARGET_FMP_FM3_VALUE,
ABI.TARGET_FMP_PL1,ABI.TARGET_FMP_PL1 * AVGP.AVGPRICE_PL AS TARGET_FMP_PL1_VALUE,ABI.TARGET_FMP_PL2,
ABI.TARGET_FMP_PL2 * AVGP.AVGPRICE_PL AS TARGET_FMP_PL2_VALUE,
ABI.TARGET_FMP_PL3,ABI.TARGET_FMP_PL3 * AVGP.AVGPRICE_PL AS TARGET_FMP_PL3_VALUE,

(ABI.TARGET_FMP_FM1 + ABI.TARGET_FMP_FM2 + ABI.TARGET_FMP_FM3)* AVGP.AVGPRICE AS TARGET_YEAR_FM_VALUE,
(ABI.TARGET_FMP_PL1 + ABI.TARGET_FMP_PL2 + ABI.TARGET_FMP_PL3)* AVGP.AVGPRICE_PL AS TARGET_YEAR_PL_VALUE,
ABI.CREATE_DATE,ABI.CREATE_BY,ABI.MODIFY_BY,ABI.MODIFY_DATE 
FROM DIST_DISTRIBUTOR DR INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DR.DISTRIBUTOR_ID = DA.DISTRIBUTOR_ID
INNER JOIN AGREE_AGREEMENT AA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO
INNER JOIN AGREE_BRAND_INCLUDE ABI ON AA.AGREEMENT_NO = ABI.AGREEMENT_NO
INNER JOIN BRND_BRAND BN ON BN.BRAND_ID = ABI.BRAND_ID
INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
LEFT OUTER JOIN(
SELECT BRAND_ID,AVGPRICE,AVGPRICE_PL, START_PERIODE FROM BRND_AVGPRICE WHERE START_PERIODE >= @START_DATE
 )AVGP
 ON AVGP.START_PERIODE = AA.START_DATE AND AVGP.BRAND_ID = ABI.BRAND_ID
 AND BN.BRAND_ID = AVGP.BRAND_ID
WHERE AA.START_DATE >= @START_DATE AND AA.END_DATE <= @END_DATE 
AND AA.QS_TREATMENT_FLAG = 'F'
AND BN.BRAND_NAME NOT LIKE 'ROUNDUP%'
GO

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Target_DPD_FMP_Roundup' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Target_DPD_FMP_Roundup
GO
CREATE PROCEDURE Usp_Get_Target_DPD_FMP_Roundup
@START_DATE SMALLDATETIME,@END_DATE SMALLDATETIME
AS
SET NOCOUNT ON;
SELECT TER.TERRITORY_AREA,DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,AA.AGREEMENT_NO,AA.END_DATE,ABI.BRAND_ID,BN.BRAND_NAME,
PS_GROUP = CASE WHEN ABI.BRAND_ID = '00601' THEN 'SMALL PACK SIZE'--BIOSORB
				WHEN ABI.BRAND_ID = '0060200' THEN 'SMALL PACK SIZE'--BIOSORB
				WHEN ABI.BRAND_ID = '00604' THEN 'SMALL PACK SIZE'--BIOSORB

				WHEN ABI.BRAND_ID = '00681' THEN 'SMALL PACK SIZE'--POWER MAX
				WHEN ABI.BRAND_ID = '00684' THEN 'SMALL PACK SIZE'--POWER MAX

				WHEN ABI.BRAND_ID = '007801' THEN 'SMALL PACK SIZE'--TRANSORB
				WHEN ABI.BRAND_ID = '007804' THEN 'SMALL PACK SIZE'--TRANSORB
				WHEN ABI.BRAND_ID = '0078200' THEN 'SMALL PACK SIZE'--TRANSORB

				WHEN ABI.BRAND_ID = '006820' THEN 'BIG PACK SIZE'--POWER MAX
				WHEN ABI.BRAND_ID = '007820' THEN 'BIG PACK SIZE'--TRANSORB
				WHEN ABI.BRAND_ID = '006020' THEN 'BIG PACK SIZE'--BIOSORB
				ELSE 'UNKNOWN PACK SIZE'
		   END,
PROD_CATEGORY = CASE WHEN CHARINDEX('POWERMAX',BN.BRAND_NAME) > 0 THEN 'ROUNDUP POWERMAX'
					 WHEN CHARINDEX('TRANSORB',BN.BRAND_NAME) > 0 THEN 'ROUNDUP TRANSORB'
					 WHEN CHARINDEX('ROUNDUP',BN.BRAND_NAME) > 0 THEN 'ROUNDUP BIOSORB'
					 ELSE 'UNKNOW CATEGORY'
				END,
ISCombined = CASE 
                 WHEN ABI.COMB_AGREE_BRAND_ID IS NOT NULL THEN 'YES'
                 ELSE 'NO'
			 END,
ABI.TARGET_FMP1,ABI.TARGET_FMP2,ABI.TARGET_FMP3,(ABI.TARGET_FMP1 + ABI.TARGET_FMP2 + ABI.TARGET_FMP3) AS TARGET_YEAR_FMP,
ABI.TARGET_FMP_FM1,ABI.TARGET_FMP_FM1 * AVGP.AVGPRICE AS TARGET_FMP_FM1_VALUE,ABI.TARGET_FMP_FM2,ABI.TARGET_FMP_FM2 * AVGP.AVGPRICE AS TARGET_FMP_FM2_VALUE,
ABI.TARGET_FMP_FM3,ABI.TARGET_FMP_FM3 * AVGP.AVGPRICE AS TARGET_FMP_FM3_VALUE,
ABI.TARGET_FMP_PL1,ABI.TARGET_FMP_PL1 * AVGP.AVGPRICE_PL  AS TARGET_FMP_PL1_VALUE,ABI.TARGET_FMP_PL2,
ABI.TARGET_FMP_PL2 * AVGP.AVGPRICE_PL AS TARGET_FMP_PL2_VALUE,
ABI.TARGET_FMP_PL3,ABI.TARGET_FMP_PL3 * AVGP.AVGPRICE_PL AS TARGET_FMP_PL3_VALUE,

(ABI.TARGET_FMP_FM1 + ABI.TARGET_FMP_FM2 + ABI.TARGET_FMP_FM3)* AVGP.AVGPRICE AS TARGET_YEAR_FM_VALUE,
(ABI.TARGET_FMP_PL1 + ABI.TARGET_FMP_PL2 + ABI.TARGET_FMP_PL3)* AVGP.AVGPRICE_PL AS TARGET_YEAR_PL_VALUE,
ABI.CREATE_DATE,ABI.CREATE_BY,ABI.MODIFY_BY,ABI.MODIFY_DATE 
FROM DIST_DISTRIBUTOR DR INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DR.DISTRIBUTOR_ID = DA.DISTRIBUTOR_ID
INNER JOIN AGREE_AGREEMENT AA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO
INNER JOIN AGREE_BRAND_INCLUDE ABI ON AA.AGREEMENT_NO = ABI.AGREEMENT_NO
INNER JOIN BRND_BRAND BN ON BN.BRAND_ID = ABI.BRAND_ID
INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
LEFT OUTER JOIN(
SELECT BRAND_ID,AVGPRICE,AVGPRICE_PL, START_PERIODE FROM BRND_AVGPRICE WHERE START_PERIODE >= @START_DATE
 )AVGP
 ON AVGP.START_PERIODE = AA.START_DATE AND AVGP.BRAND_ID = ABI.BRAND_ID
 AND BN.BRAND_ID = AVGP.BRAND_ID
WHERE AA.START_DATE >= @START_DATE AND AA.END_DATE <= @END_DATE
AND AA.QS_TREATMENT_FLAG IN('Q','F')
AND BN.BRAND_NAME LIKE 'ROUNDUP%'
GO

--add colum gen_plan_price_tag di ORDR_PO_BRANDPACK  untuk pricetag yg ngambil pakai harga umum plantation
IF NOT EXISTS(SELECT ColumnName FROM (
   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
   ON c.[object_id] = t.[object_id]
   WHERE t.[name] = 'ORDR_PO_BRANDPACK')C WHERE ColumnName = 'PRICE_CATEGORY')
   ALTER TABLE ORDR_PO_BRANDPACK ADD PRICE_CATEGORY char(2) NULL;
GO


/****** Object:  Table [dbo].[GEN_PLANT_PRICE]    Script Date: 2/10/2025 10:03:47 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GEN_PLANT_PRICE]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[GEN_PLANT_PRICE](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[PRICE_TAG] [varchar](150) NOT NULL,
	[BRANDPACK_ID] [varchar](14) NOT NULL,
	[PRICE] [decimal](18, 2) NOT NULL,
	[START_DATE] [smalldatetime] NOT NULL,
	[IncludeDPD] [bit] NOT NULL,
	[CreatedDate] [smalldatetime] NOT NULL,
	[CreatedBy] [varchar](50) NOT NULL,
	[ModifiedDate] [smalldatetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
 CONSTRAINT [PK_GEN_PLANT_PRICE] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DF_GEN_PLANT_PRICE_IncludeDPD]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[GEN_PLANT_PRICE] ADD  CONSTRAINT [DF_GEN_PLANT_PRICE_IncludeDPD]  DEFAULT ((1)) FOR [IncludeDPD]
END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_GEN_PLANT_PRICE_BRND_BRANDPACK]') AND parent_object_id = OBJECT_ID(N'[dbo].[GEN_PLANT_PRICE]'))
ALTER TABLE [dbo].[GEN_PLANT_PRICE]  WITH CHECK ADD  CONSTRAINT [FK_GEN_PLANT_PRICE_BRND_BRANDPACK] FOREIGN KEY([BRANDPACK_ID])
REFERENCES [dbo].[BRND_BRANDPACK] ([BRANDPACK_ID])
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_GEN_PLANT_PRICE_BRND_BRANDPACK]') AND parent_object_id = OBJECT_ID(N'[dbo].[GEN_PLANT_PRICE]'))
ALTER TABLE [dbo].[GEN_PLANT_PRICE] CHECK CONSTRAINT [FK_GEN_PLANT_PRICE_BRND_BRANDPACK]
GO
IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'GEN_PLANT_PRICE', NULL,NULL))
	EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Table General Plantation Price' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'GEN_PLANT_PRICE'
GO

EXEC sys.sp_addextendedproperty @name = N'MS_Description', 
@value = N'GP = General Price,SP = Special Price Plantation,FM = Free Market,PR = Project', 
@level0type = N'SCHEMA',
@level0name = N'dbo',
@level1type = N'TABLE',
@level1name = N'ORDR_PO_BRANDPACK',
@level2type = N'COLUMN',
@level2name = N'PRICE_CATEGORY'
GO
--CHECK PO DESCRIPTIONS PLANTATION ID IS '' OR NULL TAPI DESCRIPTIONS  'PRICE FROM PLANTATION'
--SELECT * FROM ORDR_PO_BRANDPACK WHERE (PLANTATION_ID IS NULL OR PLANTATION_ID = '') 
--AND DESCRIPTIONS LIKE 'PRICE FROM PLANTATION%' 
--SELECT * FROM DIST_PLANT_PRICE WHERE PRICE_TAG = '00070001LD|5/1/2021|31/1/2021|044A-01164|SEJ004IDR'

--UPDATE ORDR_PO_BRANDPACK SET PLANTATION_ID = '044A-01164'
--WHERE PO_BRANDPACK_ID = '003/SAL/PO/I/202100070001LD'

--SELECT * FROM ORDR_PO_BRANDPACK WHERE (PLANTATION_ID IS NOT NULL OR PLANTATION_ID <> '') 
--AND DESCRIPTIONS LIKE 'PRICE FROM FREE MARKET'
BEGIN
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
 BEGIN TRANSACTION

	UPDATE ORDR_PO_BRANDPACK SET PLANTATION_ID = '044A-01164'
	WHERE PO_BRANDPACK_ID = '003/SAL/PO/I/202100070001LD';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN 
  	  END

	UPDATE ORDR_PO_BRANDPACK SET PLANTATION_ID = NULL WHERE PO_BRANDPACK_ID IN('0017/PO/SyP/I/13006020020LD','38/BN/IV/2013006020020LD','SAP:2013/01/005.A00540020LD')
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK  SET DESCRIPTIONS = 'PRICE FROM FROM PLANTATION ' +
	(SELECT PLANTATION_NAME FROM PLANTATION WHERE PLANTATION_ID = 'PA/PA/PA/PA|242')
	WHERE PLANTATION_ID  = 'PA/PA/PA/PA|242'
	AND DESCRIPTIONS = 'PRICE FROM FREE MARKET';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK  SET DESCRIPTIONS = 'PRICE FROM FROM PLANTATION ' +
	(SELECT PLANTATION_NAME FROM PLANTATION WHERE PLANTATION_ID = '044A-01071')
	WHERE PLANTATION_ID = '044A-01071'
	AND DESCRIPTIONS = 'PRICE FROM FREE MARKET';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK  SET DESCRIPTIONS = 'PRICE FROM FROM PLANTATION ' +
	(SELECT PLANTATION_NAME FROM PLANTATION WHERE PLANTATION_ID = '044-00828')
	WHERE PLANTATION_ID = '044-00828'
	AND DESCRIPTIONS = 'PRICE FROM FREE MARKET';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK  SET DESCRIPTIONS = 'PRICE FROM FROM PLANTATION ' +
	(SELECT PLANTATION_NAME FROM PLANTATION WHERE PLANTATION_ID = '001-00969')
	 WHERE PLANTATION_ID = '001-00969'
	AND DESCRIPTIONS = 'PRICE FROM FREE MARKET';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK  SET DESCRIPTIONS = 'PRICE FROM FROM PLANTATION ' +
	(SELECT PLANTATION_NAME FROM PLANTATION WHERE PLANTATION_ID = '029-00957')
	WHERE PLANTATION_ID = '029-00957'
	AND DESCRIPTIONS = 'PRICE FROM FREE MARKET';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK  SET DESCRIPTIONS = 'PRICE FROM FROM PLANTATION ' +
	(SELECT PLANTATION_NAME FROM PLANTATION WHERE PLANTATION_ID = '004-01138')
	WHERE PLANTATION_ID = '004-01138'
	AND DESCRIPTIONS = 'PRICE FROM FREE MARKET';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK  SET DESCRIPTIONS = 'PRICE FROM FROM PLANTATION ' +
	(SELECT PLANTATION_NAME FROM PLANTATION WHERE PLANTATION_ID = '004-00579-00067')
	WHERE PLANTATION_ID = '004-00579-00067' 
	AND DESCRIPTIONS = 'PRICE FROM FREE MARKET';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK  SET DESCRIPTIONS = 'PRICE FROM FROM PLANTATION ' +
	(SELECT PLANTATION_NAME FROM PLANTATION WHERE PLANTATION_ID = '061-00765')
	WHERE PLANTATION_ID = '061-00765' 
	AND DESCRIPTIONS = 'PRICE FROM FREE MARKET';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK  SET DESCRIPTIONS = 'PRICE FROM FROM PLANTATION ' +
	(SELECT PLANTATION_NAME FROM PLANTATION WHERE PLANTATION_ID = '01393')
	WHERE PLANTATION_ID = '01393'
	AND DESCRIPTIONS = 'PRICE FROM FREE MARKET';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK  SET DESCRIPTIONS = 'PRICE FROM FROM PLANTATION ' +
	(SELECT PLANTATION_NAME FROM PLANTATION WHERE PLANTATION_ID = '041-00429')
	WHERE PLANTATION_ID = '041-00429'
	AND DESCRIPTIONS = 'PRICE FROM FREE MARKET';
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END

    UPDATE ORDR_PO_BRANDPACK SET PRICE_CATEGORY = 'SP' WHERE (PLANTATION_ID IS NOT NULL AND PLANTATION_ID != '');
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
    UPDATE ORDR_PO_BRANDPACK SET PRICE_CATEGORY = 'FM' WHERE (PROJ_BRANDPACK_ID IS NULL and PLANTATION_ID is null);
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END
	UPDATE ORDR_PO_BRANDPACK SET PRICE_CATEGORY = 'PR' WHERE (PROJ_BRANDPACK_ID IS NOT NULL);
	IF (@@ERROR <> 0)
	  BEGIN
	    ROLLBACK TRANSACTION
	    RETURN
  	  END

	COMMIT TRANSACTION	
END
GO

IF EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'Uv_Price_General')
  DROP VIEW Uv_Price_General
GO
CREATE VIEW Uv_Price_General
AS
SELECT GPP.IDApp, GPP.PRICE_TAG, GPP.BRANDPACK_ID, BP.BRANDPACK_NAME, GPP.PRICE, GPP.START_DATE,GPP.IncludeDPD
FROM  dbo.GEN_PLANT_PRICE AS GPP INNER JOIN
dbo.BRND_BRANDPACK AS BP ON GPP.BRANDPACK_ID = BP.BRANDPACK_ID
GO
