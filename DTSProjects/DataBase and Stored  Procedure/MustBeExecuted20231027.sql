Use Nufarm;
GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'BRND_PROD_CONV')C WHERE ColumnName = 'IDAppOther')
--   ALTER TABLE BRND_PROD_CONV ADD IDAppOther Int NULL;
--GO
--=====================================sudah============================
--ALTER TABLE BRND_PROD_CONV ALTER COLUMN BRANDPACK_ID VARCHAR(14) NULL;

--IF NOT EXISTS(SELECT * FROM SYST_MENU WHERE FORM_ID = 'BRND8' AND FORM_NAME = 'OtherProduct')
--BEGIN
--INSERT INTO SYST_MENU(FORM_ID,FORM_NAME,MENU_NAME,DESCRIPTIONS)
--VALUES('BRND8','OtherProduct','Other Product','Master Data bila di accpack belum ada');
--END
--GO
----INSERT USERNYA
--IF NOT EXISTS(SELECT [USER_ID] FROM SYST_PRIVILEGE WHERE [USER_ID] = 'asusetyo' AND FORM_ID = 'BRND8')
--BEGIN
--INSERT INTO SYST_PRIVILEGE(SYST_ID,[USER_ID],FORM_ID,ALLOW_VIEW,ALLOW_INSERT,ALLOW_DELETE,ALLOW_UPDATE)
--VALUES ('asusetyoBRND8','asusetyo','BRND8',1,1,1,1)
--END
--GO

--IF NOT EXISTS(SELECT [USER_ID] FROM SYST_PRIVILEGE WHERE [USER_ID] = 'Romdhani' AND FORM_ID = 'BRND8')
--BEGIN
--INSERT INTO SYST_PRIVILEGE(SYST_ID,[USER_ID],FORM_ID,ALLOW_VIEW,ALLOW_INSERT,ALLOW_DELETE,ALLOW_UPDATE)
--VALUES ('RomdhaniBRND8','Romdhani','BRND8',1,1,1,1)
--END
--GO

--IF NOT EXISTS(SELECT [USER_ID] FROM SYST_PRIVILEGE WHERE [USER_ID] = 'Handrian' AND FORM_ID = 'BRND8')
--BEGIN
--INSERT INTO SYST_PRIVILEGE(SYST_ID,[USER_ID],FORM_ID,ALLOW_VIEW,ALLOW_INSERT,ALLOW_DELETE,ALLOW_UPDATE)
--VALUES ('HandrianBRND8','Handrian','BRND8',1,1,1,1)
--END
--GO

--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'GON_SEPARATED_DETAIL')C WHERE ColumnName = 'ITEM_OTHER')
--   ALTER TABLE GON_SEPARATED_DETAIL ADD ITEM_OTHER INT NULL;
--GO

----IF EXISTS(SELECT ColumnName FROM (
----   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
----   ON c.[object_id] = t.[object_id]
----   WHERE t.[name] = 'GON_SEPARATED_DETAIL')C WHERE ColumnName =  'ITEM')
----   ALTER TABLE GON_SEPARATED_DETAIL ALTER COLUMN ITEM VARCHAR(14) NULL;
----GO

--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'GON_SEPARATED_PO_DETAIL')C WHERE ColumnName = 'ITEM_OTHER')
--   ALTER TABLE GON_SEPARATED_PO_DETAIL ADD ITEM_OTHER INT NULL;

--/****** Object:  Table [dbo].[BRND_PROD_OTHER]    Script Date: 1/17/2024 1:45:36 PM ******/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--CREATE TABLE [dbo].[BRND_PROD_OTHER](
--	[IDApp] [int] IDENTITY(1,1) NOT NULL,
--	[ITEM] [varchar](150) NOT NULL,
--	[DESCRIPTION] [nvarchar](150) NULL,
--	[UNIT1] [varchar](30) NOT NULL,
--	[VOL1] [decimal](18, 3) NOT NULL,
--	[UNIT2] [varchar](30) NOT NULL,
--	[VOL2] [decimal](18, 3) NOT NULL,
--	[IsRowMat] [bit] NOT NULL,
--	[UnitOfMeasure] [varchar](10) NOT NULL,
--	[INACTIVE] [bit] NOT NULL,
--	[CreatedBy] [varchar](50) NULL,
--	[CreatedDate] [smalldatetime] NULL,
--	[ModifiedBy] [varchar](50) NULL,
--	[ModifiedDate] [smalldatetime] NULL,
-- CONSTRAINT [PK_BRND_PROD_OTHER] PRIMARY KEY CLUSTERED 
--(
--	[IDApp] ASC
--)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
--) ON [PRIMARY]
--GO
--ALTER TABLE [dbo].[BRND_PROD_OTHER] ADD  CONSTRAINT [DF_BRND_PROD_OTHER_VOL1]  DEFAULT ((0)) FOR [VOL1]
--GO
--ALTER TABLE [dbo].[BRND_PROD_OTHER] ADD  CONSTRAINT [DF_BRND_PROD_OTHER_VOL2]  DEFAULT ((0)) FOR [VOL2]
--GO
--ALTER TABLE [dbo].[BRND_PROD_OTHER] ADD  CONSTRAINT [DF_BRND_PROD_OTHER_IsRowMat]  DEFAULT ((0)) FOR [IsRowMat]
--GO
--ALTER TABLE [dbo].[BRND_PROD_OTHER] ADD  CONSTRAINT [DF_BRND_PROD_OTHER_INACTIVE]  DEFAULT ((0)) FOR [INACTIVE]
--GO

----IF EXISTS(SELECT ColumnName FROM (
----   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
----   ON c.[object_id] = t.[object_id]
----   WHERE t.[name] = 'GON_SEPARATED_PO_DETAIL')C WHERE ColumnName =  'BRANDPACK_ID')
----   ALTER TABLE GON_SEPARATED_PO_DETAIL ALTER COLUMN BRANDPACK_ID VARCHAR(14) NULL;
----GO
--IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE [TABLE_NAME] = 'uv_gon_separated_PO_Pending_Gon')
--DROP VIEW uv_gon_separated_PO_Pending_Gon
--GO
--CREATE VIEW [dbo].[uv_gon_separated_PO_Pending_Gon]
--AS
--SELECT ISNULL(GON.IDApp,0)AS IDApp,GSPD.IDApp AS IDAppPODetail,GSPH.PO_NUMBER,GSPH.SPPB_NUMBER,GSPH.PO_DATE,GSPH.SPPB_DATE,
--ITEM = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN  BP.BRANDPACK_NAME
-- WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN BPO.ITEM
--ELSE 'UNKNOWN' END,
--PO_CATEGORY = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN 'REG_FIN_GOODS'
-- WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN 'UNREG_FIN_GOODS'
--ELSE 'UNKNOWN' END,
--GSPD.QUANTITY AS PO_ORIGINAL,GSPD.STATUS,ISNULL(GON.GON_NUMBER,'PENDING GON')AS GON_NUMBER,
--SHIP_TO_CUSTOMER,GON.GON_DATE,
--GON.WARHOUSE,
--GON.TRANSPORTER_NAME, GON.POLICE_NO_TRANS,GON.DRIVER_TRANS,GON.QUANTITY,GON.QUANTITY_UNIT,GON.COLLY_BOX,GON.COLLY_PACKSIZE,GON.BATCH_NO,
--GON.CreatedBy,GON.CreatedDate,GON.ModifiedBy,GON.ModifiedDate 
--FROM GON_SEPARATED_PO_HEADER GSPH INNER JOIN GON_SEPARATED_PO_DETAIL GSPD ON GSPD.FKApp = GSPH.IDApp
--LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = GSPD.BRANDPACK_ID
--LEFT OUTER JOIN BRND_PROD_OTHER BPO ON BPO.IDApp = GSPD.ITEM_OTHER
--LEFT OUTER JOIN(
--SELECT GSD.IDApp,GSD.FKAppPODetail,GSH.FKApp,ISNULL(DR.DISTRIBUTOR_NAME,GSH.SHIP_TO_CUST) AS SHIP_TO_CUSTOMER,GSH.GON_NUMBER, 
--GSH.GON_DATE,CASE GSH.WARHOUSE WHEN 'SRG' THEN 'SERANG' WHEN 'SBY' THEN 'SURABAYA' WHEN 'JKT' THEN 'JAKARTA' WHEN 'MRK' THEN 'MERAK' WHEN 'TGR' THEN 'TANGERANG' ELSE 'UNKNOWN' END AS WARHOUSE,
--GT.TRANSPORTER_NAME, GSH.POLICE_NO_TRANS,GSH.DRIVER_TRANS,GSD.QTY AS QUANTITY,
--QUANTITY_UNIT = CASE WHEN (GSD.ITEM IS NOT NULL) THEN (CONVERT(VARCHAR(20),GSD.QTY) + ' ' + BP.UNIT)
--WHEN (GSD.ITEM_OTHER IS NOT NULL) THEN (CONVERT(VARCHAR(20),GSD.QTY) + BPO1.UnitOfMeasure)
--ELSE '0' END,
--GSD.COLLY_BOX,GSD.COLLY_PACKSIZE,ISNULL(GSD.BATCH_NO,'') AS BATCH_NO,
--GSD.CreatedBy,GSD.CreatedDate,GSD.ModifiedBy,GSD.ModifiedDate
--FROM GON_SEPARATED_DETAIL GSD INNER JOIN GON_SEPARATED_HEADER GSH ON GSH.IDApp = GSD.FKAppGonHeader
--INNER JOIN GON_TRANSPORTER GT ON GT.GT_ID = GSH.TRANSPORTER 
--LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = GSD.ITEM 
--LEFT OUTER JOIN BRND_PROD_OTHER BPO1 ON BPO1.IDApp = GSD.ITEM_OTHER
--LEFT OUTER JOIN DIST_DISTRIBUTOR DR ON DR.DISTRIBUTOR_ID = GSH.SHIP_TO 
--)GON ON GON.FKAppPODetail = GSPD.IDApp
--AND GON.FKApp = GSPH.IDApp
--WHERE GSPD.STATUS='Pending' AND GON.GON_NUMBER IS NULL
--GO

--IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE [TABLE_NAME] = 'uv_gon_separated_PO_Status_Completed')
--DROP VIEW uv_gon_separated_PO_Status_Completed
--GO
--CREATE VIEW uv_gon_separated_PO_Status_Completed
--AS
--SELECT ISNULL(GSD.IDApp,0)AS IDApp,GSPD.IDApp AS IDAppPODetail,GSPH.PO_NUMBER,GSPH.SPPB_NUMBER,GSPH.PO_DATE,GSPH.SPPB_DATE,
--ITEM = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN  BP.BRANDPACK_NAME
-- WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN BPO.ITEM
--ELSE 'UNKNOWN' END,
--GSPD.QUANTITY AS PO_ORIGINAL,
--PO_CATEGORY = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN 'REG_FIN_GOODS'
-- WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN 'UNREG_FIN_GOODS'
--ELSE 'UNKNOWN' END,
--GSPD.STATUS,ISNULL(GSH.GON_NUMBER,'PENDING GON')AS GON_NUMBER,ISNULL(DR.DISTRIBUTOR_NAME,GSH.SHIP_TO_CUST) AS SHIP_TO_CUSTOMER,GSH.GON_DATE,
--CASE GSH.WARHOUSE WHEN 'SRG' THEN 'SERANG' WHEN 'SBY' THEN 'SURABAYA' WHEN 'JKT' THEN 'JAKARTA' WHEN 'MRK' THEN 'MERAK' WHEN 'TGR' THEN 'TANGERANG' ELSE 'UNKNOWN' END AS WARHOUSE,
--GT.TRANSPORTER_NAME, GSH.POLICE_NO_TRANS,GSH.DRIVER_TRANS,GSD.QTY AS QUANTITY,
--QUANTITY_UNIT = CASE WHEN (GSD.ITEM IS NOT NULL) THEN (CONVERT(VARCHAR(20),GSD.QTY) + ' ' + BP.UNIT)
--WHEN (GSD.ITEM_OTHER IS NOT NULL) THEN (CONVERT(VARCHAR(20),GSD.QTY) + BPO.UnitOfMeasure)
--ELSE '0' END,
--GSD.COLLY_BOX,GSD.COLLY_PACKSIZE,ISNULL(GSD.BATCH_NO,'') AS BATCH_NO,
--GSD.CreatedBy,GSD.CreatedDate,GSD.ModifiedBy,GSD.ModifiedDate 
--FROM GON_SEPARATED_PO_HEADER GSPH INNER JOIN GON_SEPARATED_PO_DETAIL GSPD ON GSPD.FKApp = GSPH.IDApp
--LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = GSPD.BRANDPACK_ID
--LEFT OUTER JOIN BRND_PROD_OTHER BPO ON BPO.IDApp = GSPD.ITEM_OTHER
--LEFT OUTER JOIN GON_SEPARATED_HEADER GSH ON GSH.FKApp = GSPH.IDApp
--LEFT OUTER JOIN GON_SEPARATED_DETAIL GSD ON GSH.IDApp = GSD.FKAppGonHeader
----ON GSD.ITEM_OTHER = BPO.IDApp
--AND GSD.FKAppPODetail = GSPD.IDApp 
----AND GSD.ITEM = BP.BRANDPACK_ID 
--LEFT OUTER JOIN DIST_DISTRIBUTOR DR ON DR.DISTRIBUTOR_ID = GSH.SHIP_TO 
--LEFT OUTER JOIN GON_TRANSPORTER GT ON GT.GT_ID = GSH.TRANSPORTER 
--WHERE GSPD.STATUS='Completed'
--GO

--IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE [TABLE_NAME] = 'uv_gon_separated_PO_All')
--DROP VIEW uv_gon_separated_PO_All
--GO
--CREATE VIEW uv_gon_separated_PO_All
--AS
--SELECT ISNULL(GSD.IDApp,0)AS IDApp,GSPD.IDApp AS IDAppPODetail,GSPH.PO_NUMBER,GSPH.SPPB_NUMBER,GSPH.PO_DATE,GSPH.SPPB_DATE,
--ITEM = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN  BP.BRANDPACK_NAME
--WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN BPO.ITEM
--ELSE 'UNKNOWN' END,
--GSPD.QUANTITY AS PO_ORIGINAL,
--PO_CATEGORY = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN 'REG_FIN_GOODS'
--WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN 'UNREG_FIN_GOODS'
--ELSE 'UNKNOWN' END,
--GSPD.STATUS,
--GON_NUMBER = CASE WHEN GSPD.STATUS = 'PENDING' THEN 'PENDING GON'
--WHEN GSH.GON_NUMBER IS NULL THEN 'PENDING GON'
--WHEN GSH.GON_NUMBER IS NOT NULL THEN GSH.GON_NUMBER END,
--ISNULL(DR.DISTRIBUTOR_NAME,GSH.SHIP_TO_CUST) AS SHIP_TO_CUSTOMER,GSH.GON_DATE,
--CASE GSH.WARHOUSE WHEN 'SRG' THEN 'SERANG' WHEN 'SBY' THEN 'SURABAYA' WHEN 'JKT' THEN 'JAKARTA' WHEN 'MRK' THEN 'MERAK' WHEN 'TGR' THEN 'TANGERANG' ELSE 'UNKNOWN' END AS WARHOUSE,
--GT.TRANSPORTER_NAME, GSH.POLICE_NO_TRANS,GSH.DRIVER_TRANS,GSD.QTY AS QUANTITY,CONVERT(VARCHAR(20),GSD.QTY) + ' ' + BP.UNIT AS QUANTITY_UNIT,GSD.COLLY_BOX,GSD.COLLY_PACKSIZE,ISNULL(GSD.BATCH_NO,'') AS BATCH_NO,
--GSD.CreatedBy,GSD.CreatedDate,GSD.ModifiedBy,GSD.ModifiedDate 
--FROM GON_SEPARATED_PO_HEADER GSPH INNER JOIN GON_SEPARATED_PO_DETAIL GSPD ON GSPD.FKApp = GSPH.IDApp
--LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = GSPD.BRANDPACK_ID
--LEFT OUTER JOIN BRND_PROD_OTHER BPO ON BPO.IDApp = GSPD.ITEM_OTHER
--LEFT OUTER JOIN GON_SEPARATED_HEADER GSH ON GSH.FKApp = GSPH.IDApp
--LEFT OUTER JOIN DIST_DISTRIBUTOR DR ON DR.DISTRIBUTOR_ID = GSH.SHIP_TO 
--LEFT OUTER JOIN GON_TRANSPORTER GT ON GT.GT_ID = GSH.TRANSPORTER 
--LEFT OUTER JOIN GON_SEPARATED_DETAIL GSD ON GSH.IDApp = GSD.FKAppGonHeader
--AND GSD.FKAppPODetail = GSPD.IDApp 
----AND GSD.ITEM = BP.BRANDPACK_ID 
--GO

--IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE [TABLE_NAME] = 'uv_gon_separated_PO')
--DROP VIEW uv_gon_separated_PO
--GO
--CREATE VIEW uv_gon_separated_PO
--AS
--SELECT GSD.IDApp,GSPD.IDApp AS IDAppPODetail,GSPH.PO_NUMBER,GSPH.SPPB_NUMBER,GSPH.PO_DATE,GSPH.SPPB_DATE,
--ITEM = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN  BP.BRANDPACK_NAME
--WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN BPO.ITEM
--ELSE 'UNKNOWN' END,
--GSPD.QUANTITY AS PO_ORIGINAL,
--PO_CATEGORY = CASE WHEN (GSPD.BRANDPACK_ID IS NOT NULL) THEN 'REG_FIN_GOODS'
--WHEN (GSPD.ITEM_OTHER IS NOT NULL) THEN 'UNREG_FIN_GOODS'
--ELSE 'UNKNOWN' END,
--GSPD.STATUS,ISNULL(GSH.GON_NUMBER,'PENDING GON')AS GON_NUMBER,ISNULL(DR.DISTRIBUTOR_NAME,GSH.SHIP_TO_CUST) AS SHIP_TO_CUSTOMER,GSH.GON_DATE,
--CASE GSH.WARHOUSE WHEN 'SRG' THEN 'SERANG' WHEN 'SBY' THEN 'SURABAYA' WHEN 'JKT' THEN 'JAKARTA' WHEN 'MRK' THEN 'MERAK' WHEN 'TGR' THEN 'TANGERANG' ELSE 'UNKNOWN' END AS WARHOUSE,
--GT.TRANSPORTER_NAME, GSH.POLICE_NO_TRANS,GSH.DRIVER_TRANS,GSD.QTY AS QUANTITY,CONVERT(VARCHAR(20),GSD.QTY) + ' ' + BP.UNIT AS QUANTITY_UNIT,GSD.COLLY_BOX,GSD.COLLY_PACKSIZE,ISNULL(GSD.BATCH_NO,'') AS BATCH_NO,
--GSD.CreatedBy,GSD.CreatedDate,GSD.ModifiedBy,GSD.ModifiedDate 
--FROM GON_SEPARATED_PO_HEADER GSPH INNER JOIN GON_SEPARATED_PO_DETAIL GSPD ON GSPD.FKApp = GSPH.IDApp
--LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = GSPD.BRANDPACK_ID
--LEFT OUTER JOIN BRND_PROD_OTHER BPO ON BPO.IDApp = GSPD.ITEM_OTHER
--INNER JOIN GON_SEPARATED_DETAIL GSD ON GSD.FKAppPODetail = GSPD.IDApp
--INNER JOIN GON_SEPARATED_HEADER GSH ON GSH.FKApp = GSPH.IDApp
--LEFT OUTER JOIN DIST_DISTRIBUTOR DR ON DR.DISTRIBUTOR_ID = GSH.SHIP_TO 
--INNER JOIN GON_TRANSPORTER GT ON GT.GT_ID = GSH.TRANSPORTER 
--AND GSH.IDApp = gsd.FKAppGonHeader  
----AND GSD.ITEM = BP.BRANDPACK_ID 
--GO
--=======================SUDAH ============================

--========================20240318========================
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--ALTER PROCEDURE [dbo].[Usp_Create_Temp_Invoice_Table_NI109]
--@DEC_START_DATE NUMERIC(9,0),@DEC_END_DATE NUMERIC(9,0),
--@COMPUTERNAME VARCHAR(100)
--AS
--SET NOCOUNT ON;
--DECLARE @Statement NVARCHAR(4000);

--SET @Statement = 'SELECT REPLACE(SUBSTRING(REPLACE(RIGHT(RTRIM(INV.ITEM),14),''-'',''''),2,9),''25HM'',''025G'')AS BRANDPACK_ID,RTRIM(LTRIM(REPLACE(INV.BRANDPACK_NAME,'' (HM)'',''''))) AS BRANDPACK_NAME,
--      INV.QTYSHIPPED - INV.QTYRETURN AS QTY,RTRIM(INV.INVNUMBER)AS INVNUMBER, RTRIM(INV.PONUMBER) AS PONUMBER,RTRIM(INV.REFERENCE)AS REFERENCE,INV.INVDATE,INV.UNITPRICE, 
--	 (INV.QTYSHIPPED - INV.QTYRETURN)* INV.UNITPRICE AS INV_AMOUNT,INV.AUDTUSER
--      INTO tempdb..##T_SELECT_INVOICE_' + @COMPUTERNAME + ' FROM
--      (
--       SELECT INVH.INVDATE,INVH.INVNUMBER,INVH.PONUMBER,RTRIM(ORD1.VALUE)AS REFERENCE,
--	   INVD1.ITEM,INVD1.BRANDPACK_NAME,INVD1.QTYSHIPPED,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN,INVD1.UNITPRICE,
--	   INVH.AUDTUSER
--       FROM NI109.dbo.OEINVH INVH INNER JOIN
--	   (
--	    SELECT INVD.INVUNIQ,INVD.ITEM,INVD.[DESC] AS BRANDPACK_NAME,SUM(INVD.QTYSHIPPED) AS QTYSHIPPED,INVD.UNITPRICE
--	    FROM NI109.dbo.OEINVD INVD
--		WHERE (RTRIM(INVD.ACCTSET) = ''FG'' OR RTRIM(INVD.ACCTSET) = ''FGST'' OR RTRIM(INVD.ACCTSET) = ''FGTOLL'') AND INVD.LINETYPE = 1
--        AND LEN(RIGHT(RTRIM(INVD.ITEM),11)) >= 11 GROUP BY INVD.ITEM, INVD.INVUNIQ,INVD.[DESC],INVD.UNITPRICE
--	   )INVD1
--	   ON INVH.INVUNIQ = INVD1.INVUNIQ
--       INNER JOIN NI109.DBO.OEORDH ORD ON ORD.ORDNUMBER = INVH.ORDNUMBER
--       INNER JOIN NI109.DBO.OEORDHO ORD1 ON ORD.ORDUNIQ = ORD1.ORDUNIQ
--       LEFT OUTER JOIN
--                  (
--		   SELECT CRDH1.INVNUMBER,CRDH1.ITEM,ISNULL(SUM(CRDH1.QTYRETURN),0)AS QTYRETURN
--		   FROM 
--			(								
--                   	  SELECT CRDH.CRDUNIQ,CRDH.INVNUMBER,CRDH.CRDDATE,CRD.ITEM,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN
--                          FROM NI109.DBO.OECRDH CRDH INNER JOIN 
--                          (
--                            SELECT CRDUNIQ,ITEM,ISNULL(SUM(QTYRETURN),0)AS QTYRETURN
--                            FROM NI109.DBO.OECRDD WHERE LINETYPE = 1 AND (RTRIM(ACCTSET) = ''FG'' OR RTRIM(ACCTSET) = ''FGST'' OR RTRIM(ACCTSET) = ''FGTOLL'')
--						    GROUP BY CRDUNIQ,ITEM
--                           )CRD ON CRDH.CRDUNIQ = CRD.CRDUNIQ      
--                         )CRDH1
--                   WHERE CRDH1.CRDDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
--                   ' GROUP BY CRDH1.INVNUMBER,CRDH1.ITEM    
--                  )CRD
--        ON CRD.INVNUMBER = INVH.INVNUMBER 
--        AND CRD.ITEM = INVD1.ITEM
--        WHERE RTRIM(ORD1.OPTFIELD) = ''DTSREF''
--        AND LEN(RTRIM(ORD1.VALUE)) >= 4
--        AND INVH.INVDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
--        ' AND INVH.INVDATE <= ' + CAST(@DEC_END_DATE AS VARCHAR(20)) + '' +
--	  ')INV;
--   CREATE CLUSTERED INDEX IDX_T_S_I ON ##T_SELECT_INVOICE_' + @COMPUTERNAME + '(INVDATE,QTY,BRANDPACK_ID,REFERENCE);'
--execute sp_executesql @stmt = @statement;

--============================================

--===============03/20/2024===========
--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'BRND_PROD_OTHER')C WHERE ColumnName = 'DEVIDED_QUANTITY')
--   ALTER TABLE BRND_PROD_OTHER ADD DEVIDED_QUANTITY decimal(18,3) NOT NULL DEFAULT 0;
--GO
--ALTER TABLE GON_SEPARATED_DETAIL ALTER COLUMN ITEM VARCHAR(14) null

--==============05/15/2024=============
--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'ACHIEVEMENT_HEADER')C WHERE ColumnName = 'PBF2_DIST')
--   ALTER TABLE ACHIEVEMENT_HEADER ADD PBF2_DIST decimal(18,3) NOT NULL DEFAULT 0;
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'ACHIEVEMENT_HEADER')C WHERE ColumnName = 'TOTAL_PBF2')
--   ALTER TABLE ACHIEVEMENT_HEADER ADD TOTAL_PBF2 decimal(18,3) NOT NULL DEFAULT 0;
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
--   ON c.[object_id] = t.[object_id]
--   WHERE t.[name] = 'ACHIEVEMENT_DETAIL')C WHERE ColumnName = 'TOTAL_PBF2')
--   ALTER TABLE ACHIEVEMENT_DETAIL ADD TOTAL_PBF2 decimal(18,3) NOT NULL DEFAULT 0;
--GO

--ALTER TABLE GON_SEPARATED_DETAIL ALTER COLUMN ITEM VARCHAR(14) null

--IF NOT EXISTS(SELECT FORM_ID FROM SYST_MENU WHERE FORM_ID = 'GUF003')
--	INSERT INTO SYST_MENU(FORM_ID,FORM_NAME,MENU_NAME,DESCRIPTIONS)
--	VALUES('GUG003','QtyConvertion','Manually Qty Convertion','untuk mengecek qty jadi colly');

IF NOT EXISTS(SELECT ColumnName FROM (
   SELECT c.[Object_ID],t.[name],c.[name] as ColumnName from Sys.tables t INNER JOIN Sys.columns c
   ON c.[object_id] = t.[object_id]
   WHERE t.[name] = 'DIST_DISTRIBUTOR')C WHERE ColumnName = 'EMAIL')
   ALTER TABLE DIST_DISTRIBUTOR ADD EMAIL NVARCHAR(150) NULL;
GO

IF EXISTS(SELECT NAME FROM [DBO].SYSOBJECTS WHERE NAME = 'Sp_Insert_Distributor' AND TYPE = 'P')
DROP PROCEDURE Sp_Insert_Distributor
GO
CREATE PROCEDURE Sp_Insert_Distributor
@DISTRIBUTOR_ID VARCHAR(10),
@DISTRIBUTOR_NAME VARCHAR(50),
@RESPONSIBLE_PERSON VARCHAR(50),
@TERRITORY_ID VARCHAR(10),
@PARENT_DISTRIBUTOR_ID VARCHAR(10),
@NPWP VARCHAR(30),
@MAX_DISC_PER_PO DECIMAL(10,3),
@ADDRESS VARCHAR(150),
@CONTACT VARCHAR(30),
@PHONE VARCHAR(30),
@FAX VARCHAR(20),
@HP VARCHAR(20),
@BIRTH_DATE DATETIME,
@CREATE_BY VARCHAR(30),
@JOIN_DATE SMALLDATETIME,
@HP1 VARCHAR(20) =  NULL,
@EMAIL NVARCHAR(150)
AS
SET NOCOUNT ON;
INSERT INTO Nufarm.dbo.DIST_DISTRIBUTOR(DISTRIBUTOR_ID,DISTRIBUTOR_NAME,RESPONSIBLE_PERSON,TERRITORY_ID,
PARENT_DISTRIBUTOR_ID,NPWP,MAX_DISC_PER_PO,ADDRESS,CONTACT,PHONE,FAX,HP,HP1,BIRTH_DATE,JOIN_DATE,EMAIL,CREATE_BY,CREATE_DATE)
VALUES(@DISTRIBUTOR_ID,@DISTRIBUTOR_NAME,@RESPONSIBLE_PERSON,@TERRITORY_ID,@PARENT_DISTRIBUTOR_ID,@NPWP,
@MAX_DISC_PER_PO,@ADDRESS,@CONTACT,@PHONE,@FAX,@HP,@HP1,@BIRTH_DATE,@JOIN_DATE,@EMAIL,@CREATE_BY,getdate())
GO

IF EXISTS(SELECT NAME FROM dbo.SYSOBJECTS WHERE NAME = 'Sp_Update_Distributor' AND TYPE = 'P')
DROP PROCEDURE Sp_Update_Distributor
GO
CREATE PROCEDURE Sp_Update_Distributor
@DISTRIBUTOR_ID VARCHAR(10),
@DISTRIBUTOR_NAME VARCHAR(50),
@RESPONSIBLE_PERSON VARCHAR(50),
@TERRITORY_ID VARCHAR(10),
@PARENT_DISTRIBUTOR_ID VARCHAR(10),
@NPWP VARCHAR(30),
@MAX_DISC_PER_PO DECIMAL(10,3),
@ADDRESS VARCHAR(150),
@CONTACT VARCHAR(30),
@PHONE VARCHAR(30),
@FAX VARCHAR(20),
@HP VARCHAR(20),
@BIRTH_DATE DATETIME,
@MODIFY_BY VARCHAR(30),
@JOIN_DATE SMALLDATETIME,
@HP1 VARCHAR(20) =  NULL,
@EMAIL NVARCHAR(150)
AS
SET NOCOUNT ON;
UPDATE Nufarm.dbo.DIST_DISTRIBUTOR
SET DISTRIBUTOR_NAME = @DISTRIBUTOR_NAME,RESPONSIBLE_PERSON = @RESPONSIBLE_PERSON,
TERRITORY_ID = @TERRITORY_ID,PARENT_DISTRIBUTOR_ID = @PARENT_DISTRIBUTOR_ID,
NPWP = @NPWP,MAX_DISC_PER_PO = @MAX_DISC_PER_PO,ADDRESS =@ADDRESS,CONTACT =@CONTACT,
PHONE = @PHONE,FAX = @FAX,HP = @HP,HP1 = @HP1,JOIN_DATE = @JOIN_DATE,MODIFY_BY = @MODIFY_BY,BIRTH_DATE = @BIRTH_DATE,MODIFY_DATE = GETDATE(),
EMAIL = @EMAIL
WHERE DISTRIBUTOR_ID = @DISTRIBUTOR_ID
GO

IF EXISTS(SELECT NAME FROM [DBO].SYSOBJECTS WHERE NAME = 'Usp_Check_Availability_Disc_Other' AND TYPE = 'P')
DROP PROCEDURE Usp_Check_Availability_Disc_Other
GO
CREATE PROCEDURE Usp_Check_Availability_Disc_Other
@DISTRIBUTOR_ID VARCHAR(10),
@BRANDPACK_ID VARCHAR(14),
@O_DEVIDED_QTY DECIMAL(18,3) OUTPUT,
@O_DEVIDE_FACTOR DECIMAL(18,3) OUTPUT,
@PO_DATE SMALLDATETIME,
@O_UNIT VARCHAR(15) OUTPUT,
@O_DD BIT OUTPUT,
@O_DR BIT OUTPUT,
@O_CBD BIT OUTPUT,
@O_DK BIT OUTPUT,
@O_DP BIT OUTPUT,
@IDApp INT
AS 
--SET NOCOUNT ON
DECLARE @V_BRAND_ID VARCHAR(7),@V_ApplyTo VARCHAR(5),@V_ApplyDate SMALLDATETIME,@V_START_DATE_PKD SMALLDATETIME,@V_IsDiscByBrandPack BIT,@V_IsDiscByBrandPackForAll BIT,
@V_IsByBrand bit,@V_END_DATE_PKD SMALLDATETIME;
SELECT @O_DEVIDED_QTY = (SELECT DEVIDED_QUANTITY FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
SELECT @O_DEVIDE_FACTOR = (SELECT TOP 1 DEVIDE_FACTOR FROM BRND_PACK WHERE PACK_ID = (SELECT TOP 1 PACK_ID FROM BRND_BRANDPACK 
						   WHERE BRANDPACK_ID = @BRANDPACK_ID));
SELECT @O_UNIT = (SELECT UNIT FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
SELECT TOP 1 @V_ApplyTo = APPLY_TO,@V_ApplyDate = APPLY_DATE FROM BRND_DISC_HEADER WHERE IDApp = @IDApp 
IF @IDApp > 0
	BEGIN 
		 SET @V_BRAND_ID = (SELECT BRAND_ID FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID);
		 --check apakah discount by brandpack/by brand
		 IF (SELECT COUNT(*) FROM BRND_DISC_LIST_BRANDPACK WHERE FKApp = @IDApp) > 0
			--DISCOUNT BY BRANDPACK BERARTI
			BEGIN 
			--CHECK APAKAH BrandPack nya sama 
				SET @V_IsDiscByBrandPack = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT IDApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SET @V_IsDiscByBrandPackForAll = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT IDApp FROM BRND_DISC_LIST_BRANDPACK WHERE FKApp = @IDApp AND BRANDPACK_ID =@BRANDPACK_ID)),0));
				IF @V_IsDiscByBrandPackForAll = 0 
					RETURN 0;	 
				
			END
		 ELSE IF EXISTS(SELECT BDLB.BRAND_ID FROM BRND_DISC_LIST_BRAND BDLB INNER JOIN BRND_DISC_PROG BDP ON BDLB.BRAND_ID = BDP.BRAND_ID
						WHERE BDlB.BRAND_ID = @V_BRAND_ID AND BDP.FKApp = @IDApp)
				SET @V_IsByBrand = 1;
		 ELSE IF NOT EXISTS(SELECT BRAND_ID FROM BRND_DISC_LIST_BRAND WHERE BRAND_ID = @V_BRAND_ID AND FKApp = @IDApp)
			RETURN 0;				
		IF @V_IsDiscByBrandPack > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'Dk' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP' AND BRANDPACK_ID = @BRANDPACK_ID)),0));	
			END
		ELSE IF @V_IsDiscByBrandPackForAll > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD')),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR')),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD')),0));
				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DK')),0));	
				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP')),0));	
			END
		ELSE IF @V_IsByBrand > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DK' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP' AND BRAND_ID = @V_BRAND_ID)),0));
			END
		ELSE
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD')),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR')),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD')),0));
				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DK')),0));
				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP')),0));	
			END	
		IF @V_ApplyTo = 'AL'
			RETURN 1
		 IF @V_ApplyTo = 'CD'
			BEGIN
                SELECT TOP 1 @V_START_DATE_PKD = AA.START_DATE,@V_END_DATE_PKD = AA.END_DATE FROM AGREE_AGREEMENT AA  
                INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN AGREE_BRANDPACK_INCLUDE ABP ON ABP.AGREEMENT_NO = AA.AGREEMENT_NO  
                WHERE AA.END_DATE >= @PO_DATE AND AA.START_DATE <= @PO_DATE AND DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABP.BRANDPACK_ID = @BRANDPACK_ID ; 
                IF (@V_ApplyDate >=@V_START_DATE_PKD) AND (@V_ApplyDate <=@V_END_DATE_PKD)  
                BEGIN 				
				  RETURN(SELECT 1 WHERE EXISTS(SELECT DISTRIBUTOR_ID FROM DIST_DISC_BRAND_LIST WHERE DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND FKApp = @IDApp));  
                END 
			END
		 ELSE IF @V_ApplyTo = 'GD'
			BEGIN
				SELECT TOP 1 @V_START_DATE_PKD = AA.START_DATE,@V_END_DATE_PKD = AA.END_DATE FROM AGREE_AGREEMENT AA 
                INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN AGREE_BRANDPACK_INCLUDE ABP ON ABP.AGREEMENT_NO = AA.AGREEMENT_NO 
                WHERE AA.END_DATE >= @PO_DATE AND AA.START_DATE <= @PO_DATE AND DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABP.BRANDPACK_ID = @BRANDPACK_ID ;
                IF (@V_ApplyDate >=@V_START_DATE_PKD) AND (@V_ApplyDate <=@V_END_DATE_PKD)   
				BEGIN 
					RETURN (SELECT 1 WHERE EXISTS(SELECT DGL.DISTRIBUTOR_ID FROM DIST_GROUP_LIST DGL INNER JOIN DIST_GROUP_BRND_LIST GBL ON GBL.FKGroup = DGL.GRP_ID 
                    WHERE GBL.FKDisc = @IDApp AND DGL.DISTRIBUTOR_ID = @DISTRIBUTOR_ID));
				END
			END
	END
ELSE
	RETURN 0
GO

--IF EXISTS(SELECT NAME FROM [DBO].SYSOBJECTS WHERE NAME = 'Usp_Check_Availability_Disc_Other' AND TYPE = 'P')
--DROP PROCEDURE Usp_Check_Availability_Disc_Other
--GO
--CREATE PROCEDURE Usp_Check_Availability_Disc_Other
--@DISTRIBUTOR_ID VARCHAR(10),
--@BRANDPACK_ID VARCHAR(14),
--@O_DEVIDED_QTY DECIMAL(18,3) OUTPUT,
--@O_DEVIDE_FACTOR DECIMAL(18,3) OUTPUT,
--@PO_DATE SMALLDATETIME,
--@O_UNIT VARCHAR(15) OUTPUT,
--@O_DD BIT OUTPUT,
--@O_DR BIT OUTPUT,
--@O_CBD BIT OUTPUT,
--@O_DK BIT OUTPUT,
--@O_DP BIT OUTPUT,
--@IDApp INT
--AS 
----SET NOCOUNT ON
--DECLARE @V_BRAND_ID VARCHAR(7),@V_ApplyTo VARCHAR(5),@V_ApplyDate SMALLDATETIME,@V_START_DATE_PKD SMALLDATETIME,@V_IsDiscByBrandPack BIT,@V_IsDiscByBrandPackForAll BIT,
--@V_IsByBrand bit,@V_END_DATE_PKD SMALLDATETIME;
--SELECT @O_DEVIDED_QTY = (SELECT DEVIDED_QUANTITY FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
--SELECT @O_DEVIDE_FACTOR = (SELECT TOP 1 DEVIDE_FACTOR FROM BRND_PACK WHERE PACK_ID = (SELECT TOP 1 PACK_ID FROM BRND_BRANDPACK 
--						   WHERE BRANDPACK_ID = @BRANDPACK_ID));
--SELECT @O_UNIT = (SELECT UNIT FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
--SELECT TOP 1 @V_ApplyTo = APPLY_TO,@V_ApplyDate = APPLY_DATE FROM BRND_DISC_HEADER WHERE IDApp = @IDApp 
--IF @IDApp > 0
--	BEGIN 
--		 SET @V_BRAND_ID = (SELECT BRAND_ID FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID);
--		 --check apakah discount by brandpack/by brand
--		 IF (SELECT COUNT(*) FROM BRND_DISC_LIST_BRANDPACK WHERE FKApp = @IDApp) > 0
--			--DISCOUNT BY BRANDPACK BERARTI
--			BEGIN 
--			--CHECK APAKAH BrandPack nya sama 
--				SET @V_IsDiscByBrandPack = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT IDApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND BRANDPACK_ID = @BRANDPACK_ID)),0));
--				SET @V_IsDiscByBrandPackForAll = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT IDApp FROM BRND_DISC_LIST_BRANDPACK WHERE FKApp = @IDApp AND BRANDPACK_ID =@BRANDPACK_ID)),0));
--				IF @V_IsDiscByBrandPackForAll = 0 
--					RETURN 0;	 
				
--			END
--		 ELSE IF EXISTS(SELECT BDLB.BRAND_ID FROM BRND_DISC_LIST_BRAND BDLB INNER JOIN BRND_DISC_PROG BDP ON BDLB.BRAND_ID = BDP.BRAND_ID
--						WHERE BDlB.BRAND_ID = @V_BRAND_ID AND BDP.FKApp = @IDApp)
--				SET @V_IsByBrand = 1;
--		 ELSE IF NOT EXISTS(SELECT BRAND_ID FROM BRND_DISC_LIST_BRAND WHERE BRAND_ID = @V_BRAND_ID AND FKApp = @IDApp)
--			RETURN 0;				
--		IF @V_IsDiscByBrandPack > 0
--			BEGIN
--				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
--				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
--				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
--				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'Dk' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
--				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP' AND BRANDPACK_ID = @BRANDPACK_ID)),0));	
--			END
--		ELSE IF @V_IsDiscByBrandPackForAll > 0
--			BEGIN
--				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD')),0));
--				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR')),0));
--				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD')),0));
--				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DK')),0));	
--				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP')),0));	
--			END
--		ELSE IF @V_IsByBrand > 0
--			BEGIN
--				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD' AND BRAND_ID = @V_BRAND_ID)),0));
--				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR' AND BRAND_ID = @V_BRAND_ID)),0));
--				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD' AND BRAND_ID = @V_BRAND_ID)),0));
--				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DK' AND BRAND_ID = @V_BRAND_ID)),0));
--				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP' AND BRAND_ID = @V_BRAND_ID)),0));
--			END
--		ELSE
--			BEGIN
--				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD')),0));
--				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR')),0));
--				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD')),0));
--				SELECT @O_DK = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DK')),0));
--				SELECT @O_DP = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DP')),0));	
--			END	
--		IF @V_ApplyTo = 'AL'
--			RETURN 1
--		 IF @V_ApplyTo = 'CD'
--			BEGIN
--                SELECT TOP 1 @V_START_DATE_PKD = AA.START_DATE,@V_END_DATE_PKD = AA.END_DATE FROM AGREE_AGREEMENT AA  
--                INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN AGREE_BRANDPACK_INCLUDE ABP ON ABP.AGREEMENT_NO = AA.AGREEMENT_NO  
--                WHERE AA.END_DATE >= @PO_DATE AND AA.START_DATE <= @PO_DATE AND DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABP.BRANDPACK_ID = @BRANDPACK_ID ; 
--                IF (@V_ApplyDate >=@V_START_DATE_PKD) AND (@V_ApplyDate <=@V_END_DATE_PKD)  
--                BEGIN 				
--				  RETURN(SELECT 1 WHERE EXISTS(SELECT DISTRIBUTOR_ID FROM DIST_DISC_BRAND_LIST WHERE DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND FKApp = @IDApp));  
--                END 
--			END
--		 ELSE IF @V_ApplyTo = 'GD'
--			BEGIN
--				SELECT TOP 1 @V_START_DATE_PKD = AA.START_DATE,@V_END_DATE_PKD = AA.END_DATE FROM AGREE_AGREEMENT AA 
--                INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN AGREE_BRANDPACK_INCLUDE ABP ON ABP.AGREEMENT_NO = AA.AGREEMENT_NO 
--                WHERE AA.END_DATE >= @PO_DATE AND AA.START_DATE <= @PO_DATE AND DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABP.BRANDPACK_ID = @BRANDPACK_ID ;
--                IF (@V_ApplyDate >=@V_START_DATE_PKD) AND (@V_ApplyDate <=@V_END_DATE_PKD)   
--				BEGIN 
--					RETURN (SELECT 1 WHERE EXISTS(SELECT DGL.DISTRIBUTOR_ID FROM DIST_GROUP_LIST DGL INNER JOIN DIST_GROUP_BRND_LIST GBL ON GBL.FKGroup = DGL.GRP_ID 
--                    WHERE GBL.FKDisc = @IDApp AND DGL.DISTRIBUTOR_ID = @DISTRIBUTOR_ID));
--				END
--			END
--	END
--ELSE
--	RETURN 0
--GO

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Check_Sum_Mathching_Disc_Qty'
 AND TYPE = 'P')
DROP PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
GO
CREATE PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
@OA_BRANDPACK_ID VARCHAR(75),
@DISCOUNT_TYPE VARCHAR(50)
AS
EXECUTE sp_executesql
N'SET NOCOUNT ON;
IF (@V_DISCOUNT_TYPE = ''Sales_Discount'')
   BEGIN
 	DECLARE @SUM_PROG_DISC_QTY DECIMAL(18,3),@PROG_DISC_QTY DECIMAL(18,3);
	SET @PROG_DISC_QTY =  (SELECT PROG_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3))
	SET @SUM_PROG_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	                         WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''MG'',''KP'',''CR'',''CP'',''MS'',''DK'',''CS'',''TD'',''TS'',''CD'',''CT'',''DN'',''CA''));
        UPDATE ORDR_OA_BRANDPACK SET PROG_DISC_QTY = @SUM_PROG_DISC_QTY
		WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
		
   END
ELSE IF (@V_DISCOUNT_TYPE = ''Agreement_Discount'')
     BEGIN
	  DECLARE @SUM_AGREE_DISC_QTY DECIMAL(18,3),@AGREE_DISC_QTY DECIMAL(18,3)
	    SET @AGREE_DISC_QTY = (SELECT AGREE_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3));
	    SET @SUM_AGREE_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
            WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''G'',''Q1'',''Q2'',''Q3'',''Q4'',''S1'',''S2'',''Y''));
	    
            UPDATE ORDR_OA_BRANDPACK SET AGREE_DISC_QTY = @SUM_AGREE_DISC_QTY
	    WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
     END
ELSE IF (@V_DISCOUNT_TYPE = ''Other_Discount'')
      BEGIN
	   DECLARE @SUM_OTHER_DISC_QTY DECIMAL(18,3),@OTHER_DISC_QTY DECIMAL(18,3);
	     SET @OTHER_DISC_QTY = CAST((SELECT OTHER_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
	     SET @SUM_OTHER_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	     WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''O'',''OCBD'',''ODD'',''ODR'',''ODK'',''ODP''));   
	    
             UPDATE ORDR_OA_BRANDPACK SET OTHER_DISC_QTY = @SUM_OTHER_DISC_QTY
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
      END
ELSE IF (@V_DISCOUNT_TYPE = ''Project_Discount'')
     BEGIN
	  DECLARE @SUM_PROJ_DISC_QTY DECIMAL(18,3),@PROJ_DISC_QTY DECIMAL(18,3);
	     SET @PROJ_DISC_QTY = CAST((SELECT PROJ_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
             SET @SUM_PROJ_DISC_QTY = CAST((SELECT ISNULL(SUM(DISC_QTY),0)
	        FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND
	        GQSY_SGT_P_FLAG = ''P'')AS DECIMAL(18,3));
	     UPDATE ORDR_OA_BRANDPACK SET PROJ_DISC_QTY = @SUM_PROJ_DISC_QTY 
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;	
      END',N'@V_OA_BRANDPACK_ID VARCHAR(70),@V_DISCOUNT_TYPE VARCHAR(50)',
     @V_OA_BRANDPACK_ID = @OA_BRANDPACK_ID,@V_DISCOUNT_TYPE = @DISCOUNT_TYPE;         	
GO

