<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="GridEX1.WatermarkImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>